const n=JSON.parse('{"key":"v-0d202a22","path":"/study/go/util.html","title":"工具","lang":"zh-CN","frontmatter":{"description":"工具 介绍 2023/5/26 缓存工具类 package component import ( \\t\\"fmt\\" \\t\\"sync\\" \\t\\"time\\" ) // Cache 构建一个缓存组件 type Cache struct { \\t// 锁 \\tlock sync.Mutex \\t// 缓存数据 \\tcacheMap map[string]interface{} \\t// 延迟删除 \\tdelMap map[string]time.Time } // NewCache 构建新的实例 func NewCache() *Cache { \\tc := &amp;Cache{cacheMap: make(map[string]interface{}), delMap: make(map[string]time.Time)} \\tc.startTask() \\treturn c } // Set 缓存数据并设置过期时间 func (c *Cache) Set(key interface{}, value interface{}) { \\tc.SetWithTime(key, value, -1) } // SetWithTime 缓存数据并设置过期时间 func (c *Cache) SetWithTime(key interface{}, value interface{}, duration time.Duration) { \\tdefer c.lock.Unlock() \\tc.lock.Lock() \\tk := fmt.Sprint(key) \\tc.cacheMap[k] = value \\t// 为负数时,不设置过期时间 \\tif duration &gt; 0 { \\t\\tc.delMap[k] = time.Now().Add(duration) \\t} } // Get 获取缓存数据 func (c *Cache) Get(key interface{}) interface{} { \\treturn c.cacheMap[fmt.Sprint(key)] } // Del 删除缓存数据 func (c *Cache) Del(key string) { \\tdefer c.lock.Unlock() \\tc.lock.Lock() \\tdelete(c.cacheMap, key) \\tdelete(c.delMap, key) } // startTask 开启定时任务 func (c *Cache) startTask() { \\tgo func() { \\t\\tfor true { \\t\\t\\tfor k, v := range c.delMap { \\t\\t\\t\\tif time.Now().After(v) { \\t\\t\\t\\t\\tc.Del(k) \\t\\t\\t\\t} \\t\\t\\t} \\t\\t\\ttime.Sleep(time.Second) \\t\\t} \\t}() }","head":[["meta",{"property":"og:url","content":"https://licheng1013.github.io/study/go/util.html"}],["meta",{"property":"og:site_name","content":"LiCheng Blog"}],["meta",{"property":"og:title","content":"工具"}],["meta",{"property":"og:description","content":"工具 介绍 2023/5/26 缓存工具类 package component import ( \\t\\"fmt\\" \\t\\"sync\\" \\t\\"time\\" ) // Cache 构建一个缓存组件 type Cache struct { \\t// 锁 \\tlock sync.Mutex \\t// 缓存数据 \\tcacheMap map[string]interface{} \\t// 延迟删除 \\tdelMap map[string]time.Time } // NewCache 构建新的实例 func NewCache() *Cache { \\tc := &amp;Cache{cacheMap: make(map[string]interface{}), delMap: make(map[string]time.Time)} \\tc.startTask() \\treturn c } // Set 缓存数据并设置过期时间 func (c *Cache) Set(key interface{}, value interface{}) { \\tc.SetWithTime(key, value, -1) } // SetWithTime 缓存数据并设置过期时间 func (c *Cache) SetWithTime(key interface{}, value interface{}, duration time.Duration) { \\tdefer c.lock.Unlock() \\tc.lock.Lock() \\tk := fmt.Sprint(key) \\tc.cacheMap[k] = value \\t// 为负数时,不设置过期时间 \\tif duration &gt; 0 { \\t\\tc.delMap[k] = time.Now().Add(duration) \\t} } // Get 获取缓存数据 func (c *Cache) Get(key interface{}) interface{} { \\treturn c.cacheMap[fmt.Sprint(key)] } // Del 删除缓存数据 func (c *Cache) Del(key string) { \\tdefer c.lock.Unlock() \\tc.lock.Lock() \\tdelete(c.cacheMap, key) \\tdelete(c.delMap, key) } // startTask 开启定时任务 func (c *Cache) startTask() { \\tgo func() { \\t\\tfor true { \\t\\t\\tfor k, v := range c.delMap { \\t\\t\\t\\tif time.Now().After(v) { \\t\\t\\t\\t\\tc.Del(k) \\t\\t\\t\\t} \\t\\t\\t} \\t\\t\\ttime.Sleep(time.Second) \\t\\t} \\t}() }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-26T03:28:21.000Z"}],["meta",{"property":"article:author","content":"LiCheng"}],["meta",{"property":"article:modified_time","content":"2023-05-26T03:28:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"工具\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-26T03:28:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LiCheng\\",\\"url\\":\\"https://gitee.com/licheng1013\\"}]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[{"level":3,"title":"缓存工具类","slug":"缓存工具类","link":"#缓存工具类","children":[]}]}],"git":{"createdTime":1685071701000,"updatedTime":1685071701000,"contributors":[{"name":"licheng1013","email":"2501093733@qq.com","commits":1}]},"readingTime":{"minutes":0.75,"words":226},"filePathRelative":"study/go/util.md","localizedDate":"2023年5月26日","excerpt":"<h1> 工具</h1>\\n<h2> 介绍</h2>\\n<ul>\\n<li>2023/5/26</li>\\n</ul>\\n<h3> 缓存工具类</h3>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">package</span> component\\n\\n<span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">(</span>\\n\\t<span class=\\"token string\\">\\"fmt\\"</span>\\n\\t<span class=\\"token string\\">\\"sync\\"</span>\\n\\t<span class=\\"token string\\">\\"time\\"</span>\\n<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">// Cache 构建一个缓存组件</span>\\n<span class=\\"token keyword\\">type</span> Cache <span class=\\"token keyword\\">struct</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token comment\\">// 锁</span>\\n\\tlock sync<span class=\\"token punctuation\\">.</span>Mutex\\n\\t<span class=\\"token comment\\">// 缓存数据</span>\\n\\tcacheMap <span class=\\"token keyword\\">map</span><span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">]</span><span class=\\"token keyword\\">interface</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token comment\\">// 延迟删除</span>\\n\\tdelMap <span class=\\"token keyword\\">map</span><span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">]</span>time<span class=\\"token punctuation\\">.</span>Time\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// NewCache 构建新的实例</span>\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">NewCache</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span>Cache <span class=\\"token punctuation\\">{</span>\\n\\tc <span class=\\"token operator\\">:=</span> <span class=\\"token operator\\">&amp;</span>Cache<span class=\\"token punctuation\\">{</span>cacheMap<span class=\\"token punctuation\\">:</span> <span class=\\"token function\\">make</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">map</span><span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">]</span><span class=\\"token keyword\\">interface</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> delMap<span class=\\"token punctuation\\">:</span> <span class=\\"token function\\">make</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">map</span><span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">]</span>time<span class=\\"token punctuation\\">.</span>Time<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">}</span>\\n\\tc<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">startTask</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token keyword\\">return</span> c\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// Set 缓存数据并设置过期时间</span>\\n<span class=\\"token keyword\\">func</span> <span class=\\"token punctuation\\">(</span>c <span class=\\"token operator\\">*</span>Cache<span class=\\"token punctuation\\">)</span> <span class=\\"token function\\">Set</span><span class=\\"token punctuation\\">(</span>key <span class=\\"token keyword\\">interface</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span> value <span class=\\"token keyword\\">interface</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\tc<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">SetWithTime</span><span class=\\"token punctuation\\">(</span>key<span class=\\"token punctuation\\">,</span> value<span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// SetWithTime 缓存数据并设置过期时间</span>\\n<span class=\\"token keyword\\">func</span> <span class=\\"token punctuation\\">(</span>c <span class=\\"token operator\\">*</span>Cache<span class=\\"token punctuation\\">)</span> <span class=\\"token function\\">SetWithTime</span><span class=\\"token punctuation\\">(</span>key <span class=\\"token keyword\\">interface</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span> value <span class=\\"token keyword\\">interface</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span> duration time<span class=\\"token punctuation\\">.</span>Duration<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">defer</span> c<span class=\\"token punctuation\\">.</span>lock<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Unlock</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\tc<span class=\\"token punctuation\\">.</span>lock<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Lock</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\tk <span class=\\"token operator\\">:=</span> fmt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Sprint</span><span class=\\"token punctuation\\">(</span>key<span class=\\"token punctuation\\">)</span>\\n\\tc<span class=\\"token punctuation\\">.</span>cacheMap<span class=\\"token punctuation\\">[</span>k<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> value\\n\\t<span class=\\"token comment\\">// 为负数时,不设置过期时间</span>\\n\\t<span class=\\"token keyword\\">if</span> duration <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">0</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\tc<span class=\\"token punctuation\\">.</span>delMap<span class=\\"token punctuation\\">[</span>k<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> time<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Now</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Add</span><span class=\\"token punctuation\\">(</span>duration<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// Get 获取缓存数据</span>\\n<span class=\\"token keyword\\">func</span> <span class=\\"token punctuation\\">(</span>c <span class=\\"token operator\\">*</span>Cache<span class=\\"token punctuation\\">)</span> <span class=\\"token function\\">Get</span><span class=\\"token punctuation\\">(</span>key <span class=\\"token keyword\\">interface</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">interface</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">return</span> c<span class=\\"token punctuation\\">.</span>cacheMap<span class=\\"token punctuation\\">[</span>fmt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Sprint</span><span class=\\"token punctuation\\">(</span>key<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">]</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// Del 删除缓存数据</span>\\n<span class=\\"token keyword\\">func</span> <span class=\\"token punctuation\\">(</span>c <span class=\\"token operator\\">*</span>Cache<span class=\\"token punctuation\\">)</span> <span class=\\"token function\\">Del</span><span class=\\"token punctuation\\">(</span>key <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">defer</span> c<span class=\\"token punctuation\\">.</span>lock<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Unlock</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\tc<span class=\\"token punctuation\\">.</span>lock<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Lock</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token function\\">delete</span><span class=\\"token punctuation\\">(</span>c<span class=\\"token punctuation\\">.</span>cacheMap<span class=\\"token punctuation\\">,</span> key<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token function\\">delete</span><span class=\\"token punctuation\\">(</span>c<span class=\\"token punctuation\\">.</span>delMap<span class=\\"token punctuation\\">,</span> key<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// startTask 开启定时任务</span>\\n<span class=\\"token keyword\\">func</span> <span class=\\"token punctuation\\">(</span>c <span class=\\"token operator\\">*</span>Cache<span class=\\"token punctuation\\">)</span> <span class=\\"token function\\">startTask</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">go</span> <span class=\\"token keyword\\">func</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">for</span> <span class=\\"token boolean\\">true</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t\\t<span class=\\"token keyword\\">for</span> k<span class=\\"token punctuation\\">,</span> v <span class=\\"token operator\\">:=</span> <span class=\\"token keyword\\">range</span> c<span class=\\"token punctuation\\">.</span>delMap <span class=\\"token punctuation\\">{</span>\\n\\t\\t\\t\\t<span class=\\"token keyword\\">if</span> time<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Now</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">After</span><span class=\\"token punctuation\\">(</span>v<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t\\t\\t\\tc<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Del</span><span class=\\"token punctuation\\">(</span>k<span class=\\"token punctuation\\">)</span>\\n\\t\\t\\t\\t<span class=\\"token punctuation\\">}</span>\\n\\t\\t\\t<span class=\\"token punctuation\\">}</span>\\n\\t\\t\\ttime<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Sleep</span><span class=\\"token punctuation\\">(</span>time<span class=\\"token punctuation\\">.</span>Second<span class=\\"token punctuation\\">)</span>\\n\\t\\t<span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
