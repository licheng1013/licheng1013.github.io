const s=JSON.parse('{"key":"v-a86ab80e","path":"/study/go/ssh.html","title":"Ssh","lang":"zh-CN","frontmatter":{"description":"Ssh 介绍 2022/10/25 终端连接 package test import ( \\t\\"fmt\\" \\t\\"golang.org/x/crypto/ssh\\" \\t\\"log\\" \\t\\"testing\\" \\t\\"time\\" ) func Test2(t *testing.T) { \\tsshHost := \\"192.168.101.11\\" \\tsshUser := \\"root\\" \\tsshPassword := \\"root\\" \\tsshPort := 22 \\t//创建ssh登陆配置 \\tconfig := &amp;ssh.ClientConfig{ \\t\\tTimeout: time.Second, //ssh 连接time out 时间一秒钟, 如果ssh验证错误 会在一秒内返回 \\t\\tUser: sshUser, \\t\\tHostKeyCallback: ssh.InsecureIgnoreHostKey(), //这个可以, 但是不够安全 \\t\\t//HostKeyCallback: hostKeyCallBackFunc(h.Host), \\t} \\tconfig.Auth = []ssh.AuthMethod{ssh.Password(sshPassword)} \\t//dial 获取ssh client \\taddr := fmt.Sprintf(\\"%s:%d\\", sshHost, sshPort) \\tsshClient, err := ssh.Dial(\\"tcp\\", addr, config) \\tif err != nil { \\t\\tlog.Fatalln(\\"创建ssh client 失败\\", err) \\t} \\tdefer sshClient.Close() \\t//创建ssh-session \\tsession, err := sshClient.NewSession() \\tif err != nil { \\t\\tlog.Fatalln(\\"创建ssh session 失败\\", err) \\t} \\tdefer session.Close() \\t//执行远程命令 \\tcombo, err := session.CombinedOutput(\\"echo HelloWorld\\") \\tif err != nil { \\t\\tlog.Fatalln(\\"远程执行cmd 失败\\", err) \\t} \\tlog.Println(\\"命令输出:\\", string(combo)) }","head":[["meta",{"property":"og:url","content":"https://licheng1013.github.io/study/go/ssh.html"}],["meta",{"property":"og:site_name","content":"LiCheng Blog"}],["meta",{"property":"og:title","content":"Ssh"}],["meta",{"property":"og:description","content":"Ssh 介绍 2022/10/25 终端连接 package test import ( \\t\\"fmt\\" \\t\\"golang.org/x/crypto/ssh\\" \\t\\"log\\" \\t\\"testing\\" \\t\\"time\\" ) func Test2(t *testing.T) { \\tsshHost := \\"192.168.101.11\\" \\tsshUser := \\"root\\" \\tsshPassword := \\"root\\" \\tsshPort := 22 \\t//创建ssh登陆配置 \\tconfig := &amp;ssh.ClientConfig{ \\t\\tTimeout: time.Second, //ssh 连接time out 时间一秒钟, 如果ssh验证错误 会在一秒内返回 \\t\\tUser: sshUser, \\t\\tHostKeyCallback: ssh.InsecureIgnoreHostKey(), //这个可以, 但是不够安全 \\t\\t//HostKeyCallback: hostKeyCallBackFunc(h.Host), \\t} \\tconfig.Auth = []ssh.AuthMethod{ssh.Password(sshPassword)} \\t//dial 获取ssh client \\taddr := fmt.Sprintf(\\"%s:%d\\", sshHost, sshPort) \\tsshClient, err := ssh.Dial(\\"tcp\\", addr, config) \\tif err != nil { \\t\\tlog.Fatalln(\\"创建ssh client 失败\\", err) \\t} \\tdefer sshClient.Close() \\t//创建ssh-session \\tsession, err := sshClient.NewSession() \\tif err != nil { \\t\\tlog.Fatalln(\\"创建ssh session 失败\\", err) \\t} \\tdefer session.Close() \\t//执行远程命令 \\tcombo, err := session.CombinedOutput(\\"echo HelloWorld\\") \\tif err != nil { \\t\\tlog.Fatalln(\\"远程执行cmd 失败\\", err) \\t} \\tlog.Println(\\"命令输出:\\", string(combo)) }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-25T01:12:31.000Z"}],["meta",{"property":"article:author","content":"LiCheng"}],["meta",{"property":"article:modified_time","content":"2023-04-25T01:12:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Ssh\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-25T01:12:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LiCheng\\",\\"url\\":\\"https://gitee.com/licheng1013\\"}]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"终端连接","slug":"终端连接","link":"#终端连接","children":[]}],"git":{"createdTime":1670583353000,"updatedTime":1682385151000,"contributors":[{"name":"licheng1013","email":"2501093733@qq.com","commits":2}]},"readingTime":{"minutes":0.56,"words":169},"filePathRelative":"study/go/ssh.md","localizedDate":"2022年12月9日","excerpt":"<h1> Ssh</h1>\\n<h2> 介绍</h2>\\n<ul>\\n<li>2022/10/25</li>\\n</ul>\\n<h2> 终端连接</h2>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code>\\n<span class=\\"token keyword\\">package</span> test\\n\\n<span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">(</span>\\n\\t<span class=\\"token string\\">\\"fmt\\"</span>\\n\\t<span class=\\"token string\\">\\"golang.org/x/crypto/ssh\\"</span>\\n\\t<span class=\\"token string\\">\\"log\\"</span>\\n\\t<span class=\\"token string\\">\\"testing\\"</span>\\n\\t<span class=\\"token string\\">\\"time\\"</span>\\n<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">Test2</span><span class=\\"token punctuation\\">(</span>t <span class=\\"token operator\\">*</span>testing<span class=\\"token punctuation\\">.</span>T<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\tsshHost <span class=\\"token operator\\">:=</span> <span class=\\"token string\\">\\"192.168.101.11\\"</span>\\n\\tsshUser <span class=\\"token operator\\">:=</span> <span class=\\"token string\\">\\"root\\"</span>\\n\\tsshPassword <span class=\\"token operator\\">:=</span> <span class=\\"token string\\">\\"root\\"</span>\\n\\tsshPort <span class=\\"token operator\\">:=</span> <span class=\\"token number\\">22</span>\\n\\n\\t<span class=\\"token comment\\">//创建ssh登陆配置</span>\\n\\tconfig <span class=\\"token operator\\">:=</span> <span class=\\"token operator\\">&amp;</span>ssh<span class=\\"token punctuation\\">.</span>ClientConfig<span class=\\"token punctuation\\">{</span>\\n\\t\\tTimeout<span class=\\"token punctuation\\">:</span>         time<span class=\\"token punctuation\\">.</span>Second<span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">//ssh 连接time out 时间一秒钟, 如果ssh验证错误 会在一秒内返回</span>\\n\\t\\tUser<span class=\\"token punctuation\\">:</span>            sshUser<span class=\\"token punctuation\\">,</span>\\n\\t\\tHostKeyCallback<span class=\\"token punctuation\\">:</span> ssh<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">InsecureIgnoreHostKey</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">//这个可以, 但是不够安全</span>\\n\\t\\t<span class=\\"token comment\\">//HostKeyCallback: hostKeyCallBackFunc(h.Host),</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\tconfig<span class=\\"token punctuation\\">.</span>Auth <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>ssh<span class=\\"token punctuation\\">.</span>AuthMethod<span class=\\"token punctuation\\">{</span>ssh<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Password</span><span class=\\"token punctuation\\">(</span>sshPassword<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">}</span>\\n\\n\\t<span class=\\"token comment\\">//dial 获取ssh client</span>\\n\\taddr <span class=\\"token operator\\">:=</span> fmt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Sprintf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"%s:%d\\"</span><span class=\\"token punctuation\\">,</span> sshHost<span class=\\"token punctuation\\">,</span> sshPort<span class=\\"token punctuation\\">)</span>\\n\\tsshClient<span class=\\"token punctuation\\">,</span> err <span class=\\"token operator\\">:=</span> ssh<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Dial</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"tcp\\"</span><span class=\\"token punctuation\\">,</span> addr<span class=\\"token punctuation\\">,</span> config<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token keyword\\">if</span> err <span class=\\"token operator\\">!=</span> <span class=\\"token boolean\\">nil</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\tlog<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Fatalln</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"创建ssh client 失败\\"</span><span class=\\"token punctuation\\">,</span> err<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token keyword\\">defer</span> sshClient<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Close</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n\\t<span class=\\"token comment\\">//创建ssh-session</span>\\n\\tsession<span class=\\"token punctuation\\">,</span> err <span class=\\"token operator\\">:=</span> sshClient<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">NewSession</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token keyword\\">if</span> err <span class=\\"token operator\\">!=</span> <span class=\\"token boolean\\">nil</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\tlog<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Fatalln</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"创建ssh session 失败\\"</span><span class=\\"token punctuation\\">,</span> err<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token keyword\\">defer</span> session<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Close</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token comment\\">//执行远程命令</span>\\n\\tcombo<span class=\\"token punctuation\\">,</span> err <span class=\\"token operator\\">:=</span> session<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">CombinedOutput</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"echo HelloWorld\\"</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token keyword\\">if</span> err <span class=\\"token operator\\">!=</span> <span class=\\"token boolean\\">nil</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\tlog<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Fatalln</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"远程执行cmd 失败\\"</span><span class=\\"token punctuation\\">,</span> err<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\tlog<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"命令输出:\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">string</span><span class=\\"token punctuation\\">(</span>combo<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{s as data};
