import{_ as a,o as e,c as i,d as h}from"./app.47ad460b.js";const r={},d=h('<h1 id="自述" tabindex="-1"><a class="header-anchor" href="#自述" aria-hidden="true">#</a> 自述</h1><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍⛪</h2><ul><li>学习一些新东西，体验一些新东西。</li></ul><h2 id="堆栈" tabindex="-1"><a class="header-anchor" href="#堆栈" aria-hidden="true">#</a> 堆栈😆</h2><h3 id="栈" tabindex="-1"><a class="header-anchor" href="#栈" aria-hidden="true">#</a> 栈🍎</h3><ul><li>栈内存</li><li>方法栈</li><li>本地方法栈</li><li>描述：在本地方法读取，其变量的内存大小是可预见的。</li><li>代码优化: 本地变量获取赋值如果不需要修改则请使用 final 修饰变量</li></ul><h3 id="堆" tabindex="-1"><a class="header-anchor" href="#堆" aria-hidden="true">#</a> 堆🍏</h3><ul><li>堆内存</li><li>描述：内存大小是不固定的。内存地址的位置也不固定。</li><li>代码建议: 尽量不使用或替换到本地方法变量，找寻内存地址也需要时间。</li></ul><h2 id="网络协议" tabindex="-1"><a class="header-anchor" href="#网络协议" aria-hidden="true">#</a> 网络协议❤️</h2><h3 id="http协议" tabindex="-1"><a class="header-anchor" href="#http协议" aria-hidden="true">#</a> Http协议😃</h3><ul><li>http协议是基于tcp协议的封装实现。</li></ul>',11),l=[d];function t(n,c){return e(),i("div",null,l)}const o=a(r,[["render",t],["__file","body.html.vue"]]);export{o as default};
