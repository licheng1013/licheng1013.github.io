const n=JSON.parse('{"key":"v-737d6172","path":"/study/java/kd.html","title":"目录","lang":"zh-CN","frontmatter":{"description":"目录 介绍 fun rename(){ val path = \\"C:\\\\\\\\Users\\\\\\\\bll\\\\\\\\Downloads\\\\\\\\周借论钢琴曲\\" // 获取所有文件 val files = FileUtil.getFiles(path) for (file in files) { // 修改文件名 val name = file.name // 插入字符串 var newName = name.replace(\\"-\\",\\" \\") println(newName) file.renameTo(File(file.parentFile, newName)) } } fun downloadBB() { val cmd = \\"C:\\\\\\\\Users\\\\\\\\bll\\\\\\\\Downloads\\\\\\\\周借论钢琴曲\\\\\\\\BBDown.exe\\" val json = FileUtil.readFile(\\"C:\\\\\\\\Users\\\\\\\\bll\\\\\\\\Downloads\\\\\\\\周借论钢琴曲\\\\\\\\json.txt\\") val list = JsonUtil.toObject(json, ArrayList::class.java) for (it in list) { if (it is Map&lt;*, *&gt;) { val id = it[\\"bvid\\"] exec(cmd, id.toString()) // 休眠3秒继续 Thread.sleep(3000) } } } // 执行命令 fun exec(cmd: String, bvId: String) { val processBuilder = ProcessBuilder(cmd, bvId, \\"--audio-only\\") println(processBuilder.command().toString()) processBuilder.redirectErrorStream(true) val process = processBuilder.start() val bufferedReader = process.inputStream.bufferedReader(charset = Charsets.US_ASCII) var line: String? while (bufferedReader.readLine().also { line = it } != null) { println(line) } process.waitFor() bufferedReader.close() }","head":[["meta",{"property":"og:url","content":"https://licheng1013.github.io/study/java/kd.html"}],["meta",{"property":"og:site_name","content":"LiCheng Blog"}],["meta",{"property":"og:title","content":"目录"}],["meta",{"property":"og:description","content":"目录 介绍 fun rename(){ val path = \\"C:\\\\\\\\Users\\\\\\\\bll\\\\\\\\Downloads\\\\\\\\周借论钢琴曲\\" // 获取所有文件 val files = FileUtil.getFiles(path) for (file in files) { // 修改文件名 val name = file.name // 插入字符串 var newName = name.replace(\\"-\\",\\" \\") println(newName) file.renameTo(File(file.parentFile, newName)) } } fun downloadBB() { val cmd = \\"C:\\\\\\\\Users\\\\\\\\bll\\\\\\\\Downloads\\\\\\\\周借论钢琴曲\\\\\\\\BBDown.exe\\" val json = FileUtil.readFile(\\"C:\\\\\\\\Users\\\\\\\\bll\\\\\\\\Downloads\\\\\\\\周借论钢琴曲\\\\\\\\json.txt\\") val list = JsonUtil.toObject(json, ArrayList::class.java) for (it in list) { if (it is Map&lt;*, *&gt;) { val id = it[\\"bvid\\"] exec(cmd, id.toString()) // 休眠3秒继续 Thread.sleep(3000) } } } // 执行命令 fun exec(cmd: String, bvId: String) { val processBuilder = ProcessBuilder(cmd, bvId, \\"--audio-only\\") println(processBuilder.command().toString()) processBuilder.redirectErrorStream(true) val process = processBuilder.start() val bufferedReader = process.inputStream.bufferedReader(charset = Charsets.US_ASCII) var line: String? while (bufferedReader.readLine().also { line = it } != null) { println(line) } process.waitFor() bufferedReader.close() }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-04T07:03:24.000Z"}],["meta",{"property":"article:author","content":"LiCheng"}],["meta",{"property":"article:modified_time","content":"2023-12-04T07:03:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"目录\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-04T07:03:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LiCheng\\",\\"url\\":\\"https://gitee.com/licheng1013\\"}]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]}],"git":{"createdTime":1701673404000,"updatedTime":1701673404000,"contributors":[{"name":"licheng","email":"2501093733@qq.com","commits":1}]},"readingTime":{"minutes":0.54,"words":161},"filePathRelative":"study/java/kd.md","localizedDate":"2023年12月4日","excerpt":"<h1> 目录</h1>\\n<h2> 介绍</h2>\\n<div class=\\"language-kotlin line-numbers-mode\\" data-ext=\\"kt\\"><pre class=\\"language-kotlin\\"><code>\\n<span class=\\"token keyword\\">fun</span> <span class=\\"token function\\">rename</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">val</span> path <span class=\\"token operator\\">=</span> <span class=\\"token string-literal singleline\\"><span class=\\"token string\\">\\"C:\\\\\\\\Users\\\\\\\\bll\\\\\\\\Downloads\\\\\\\\周借论钢琴曲\\"</span></span>\\n    <span class=\\"token comment\\">// 获取所有文件</span>\\n    <span class=\\"token keyword\\">val</span> files <span class=\\"token operator\\">=</span> FileUtil<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getFiles</span><span class=\\"token punctuation\\">(</span>path<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span>file <span class=\\"token keyword\\">in</span> files<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// 修改文件名</span>\\n        <span class=\\"token keyword\\">val</span> name <span class=\\"token operator\\">=</span> file<span class=\\"token punctuation\\">.</span>name\\n        <span class=\\"token comment\\">// 插入字符串</span>\\n        <span class=\\"token keyword\\">var</span> newName <span class=\\"token operator\\">=</span> name<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">replace</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-literal singleline\\"><span class=\\"token string\\">\\"-\\"</span></span><span class=\\"token punctuation\\">,</span><span class=\\"token string-literal singleline\\"><span class=\\"token string\\">\\" \\"</span></span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span>newName<span class=\\"token punctuation\\">)</span>\\n        file<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">renameTo</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">File</span><span class=\\"token punctuation\\">(</span>file<span class=\\"token punctuation\\">.</span>parentFile<span class=\\"token punctuation\\">,</span> newName<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n\\n<span class=\\"token keyword\\">fun</span> <span class=\\"token function\\">downloadBB</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">val</span> cmd <span class=\\"token operator\\">=</span> <span class=\\"token string-literal singleline\\"><span class=\\"token string\\">\\"C:\\\\\\\\Users\\\\\\\\bll\\\\\\\\Downloads\\\\\\\\周借论钢琴曲\\\\\\\\BBDown.exe\\"</span></span>\\n    <span class=\\"token keyword\\">val</span> json <span class=\\"token operator\\">=</span> FileUtil<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">readFile</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-literal singleline\\"><span class=\\"token string\\">\\"C:\\\\\\\\Users\\\\\\\\bll\\\\\\\\Downloads\\\\\\\\周借论钢琴曲\\\\\\\\json.txt\\"</span></span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">val</span> list <span class=\\"token operator\\">=</span> JsonUtil<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toObject</span><span class=\\"token punctuation\\">(</span>json<span class=\\"token punctuation\\">,</span> ArrayList<span class=\\"token operator\\">::</span><span class=\\"token keyword\\">class</span><span class=\\"token punctuation\\">.</span>java<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span>it <span class=\\"token keyword\\">in</span> list<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>it <span class=\\"token keyword\\">is</span> Map<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">*</span><span class=\\"token operator\\">&gt;</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">val</span> id <span class=\\"token operator\\">=</span> it<span class=\\"token punctuation\\">[</span><span class=\\"token string-literal singleline\\"><span class=\\"token string\\">\\"bvid\\"</span></span><span class=\\"token punctuation\\">]</span>\\n            <span class=\\"token function\\">exec</span><span class=\\"token punctuation\\">(</span>cmd<span class=\\"token punctuation\\">,</span> id<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toString</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token comment\\">// 休眠3秒继续</span>\\n            Thread<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">sleep</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">3000</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n\\n<span class=\\"token comment\\">// 执行命令</span>\\n<span class=\\"token keyword\\">fun</span> <span class=\\"token function\\">exec</span><span class=\\"token punctuation\\">(</span>cmd<span class=\\"token operator\\">:</span> String<span class=\\"token punctuation\\">,</span> bvId<span class=\\"token operator\\">:</span> String<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">val</span> processBuilder <span class=\\"token operator\\">=</span> <span class=\\"token function\\">ProcessBuilder</span><span class=\\"token punctuation\\">(</span>cmd<span class=\\"token punctuation\\">,</span> bvId<span class=\\"token punctuation\\">,</span> <span class=\\"token string-literal singleline\\"><span class=\\"token string\\">\\"--audio-only\\"</span></span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span>processBuilder<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">command</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toString</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n    processBuilder<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">redirectErrorStream</span><span class=\\"token punctuation\\">(</span><span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">val</span> process <span class=\\"token operator\\">=</span> processBuilder<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">start</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">val</span> bufferedReader <span class=\\"token operator\\">=</span> process<span class=\\"token punctuation\\">.</span>inputStream<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">bufferedReader</span><span class=\\"token punctuation\\">(</span>charset <span class=\\"token operator\\">=</span> Charsets<span class=\\"token punctuation\\">.</span>US_ASCII<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">var</span> line<span class=\\"token operator\\">:</span> String<span class=\\"token operator\\">?</span>\\n    <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>bufferedReader<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">readLine</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">also</span> <span class=\\"token punctuation\\">{</span> line <span class=\\"token operator\\">=</span> it <span class=\\"token punctuation\\">}</span> <span class=\\"token operator\\">!=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span>line<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    process<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">waitFor</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    bufferedReader<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">close</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
