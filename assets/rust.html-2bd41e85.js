import{_ as p,Q as o,S as c,Z as n,a2 as s,$ as t,a1 as e,E as i}from"./framework-f983c147.js";const l={},u=n("h1",{id:"rust",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#rust","aria-hidden":"true"},"#"),s(" Rust")],-1),r=n("h2",{id:"镜像源",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#镜像源","aria-hidden":"true"},"#"),s(" 镜像源🍊")],-1),d={href:"https://rsproxy.cn/",target:"_blank",rel:"noopener noreferrer"},k=n("h2",{id:"描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#描述","aria-hidden":"true"},"#"),s(" 描述🍑")],-1),h=n("ul",null,[n("li",null,"无聊又去学一门新语言怎么样。"),n("li",null,"与其他语言不同的是，rust的语法相当的陌生。")],-1),m=n("h2",{id:"介绍",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#介绍","aria-hidden":"true"},"#"),s(" 介绍🐯")],-1),v={href:"https://www.rust-lang.org/zh-CN/learn",target:"_blank",rel:"noopener noreferrer"},b={href:"https://kaisery.github.io/trpl-zh-cn/ch03-01-variables-and-mutability.html",target:"_blank",rel:"noopener noreferrer"},f={href:"https://rustwiki.org/zh-CN/rust-by-example/index.html",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/licheng1013/rust-study",target:"_blank",rel:"noopener noreferrer"},_=e(`<h2 id="基本语法" tabindex="-1"><a class="header-anchor" href="#基本语法" aria-hidden="true">#</a> 基本语法👏</h2><h3 id="变量" tabindex="-1"><a class="header-anchor" href="#变量" aria-hidden="true">#</a> 变量👻</h3><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token comment">// 普通变量，不可变的，加上 mut 为可变 let mut x = 5;</span>
    <span class="token keyword">const</span> <span class="token constant">NUMBER</span><span class="token punctuation">:</span> <span class="token keyword">i16</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token comment">// 常量</span>
    <span class="token keyword">let</span> y<span class="token punctuation">:</span> <span class="token keyword">f32</span> <span class="token operator">=</span> <span class="token number">3.0</span><span class="token punctuation">;</span> <span class="token comment">// f32</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{x}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{NUMBER}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{y}&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="流程控制" tabindex="-1"><a class="header-anchor" href="#流程控制" aria-hidden="true">#</a> 流程控制💔</h3><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> number <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> number <span class="token operator">&lt;</span> <span class="token number">5</span> <span class="token punctuation">{</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> number <span class="token operator">&lt;</span> <span class="token number">10</span>  <span class="token punctuation">{</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;10&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;false&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="三元表达式" tabindex="-1"><a class="header-anchor" href="#三元表达式" aria-hidden="true">#</a> 三元表达式💔</h3><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code>
<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> condition <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> number <span class="token operator">=</span> <span class="token keyword">if</span> condition <span class="token punctuation">{</span> <span class="token number">5</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token number">6</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;The value of number is: {number}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="列表" tabindex="-1"><a class="header-anchor" href="#列表" aria-hidden="true">#</a> 列表🍅</h3><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token comment">/// 列表</span>
<span class="token keyword">fn</span> <span class="token function-definition function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;list-----------------------------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 列表</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> v<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token class-name">Vec</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    v<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    v<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//增加</span>
    v<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//删除</span>
    v<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;获取: {:?},长度: {:?},列表: {:?}&quot;</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>v<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="map" tabindex="-1"><a class="header-anchor" href="#map" aria-hidden="true">#</a> Map🐷</h3><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">map</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// map</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\nmap-----------------------------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> map <span class="token operator">=</span> <span class="token class-name">HashMap</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    map<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">&quot;Blue&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//插入</span>
    map<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">&quot;Yellow&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//插入</span>
    map<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">&quot;Blue&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//替换</span>
    map<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">&quot;Yellow&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;获取: {:?},map: {:?}&quot;</span><span class="token punctuation">,</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;Blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> map<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="开源库" tabindex="-1"><a class="header-anchor" href="#开源库" aria-hidden="true">#</a> 开源库🍇</h2><h3 id="跨平台桌面框架" tabindex="-1"><a class="header-anchor" href="#跨平台桌面框架" aria-hidden="true">#</a> 跨平台桌面框架🐔</h3>`,13),w={href:"https://tauri.app/",target:"_blank",rel:"noopener noreferrer"},x=n("h3",{id:"前端框架",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#前端框架","aria-hidden":"true"},"#"),s(" 前端框架💢")],-1),y={href:"https://github.com/yewstack/yew",target:"_blank",rel:"noopener noreferrer"},q=n("h3",{id:"后端框架",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#后端框架","aria-hidden":"true"},"#"),s(" 后端框架✋")],-1),N={href:"https://github.com/actix/actix-web",target:"_blank",rel:"noopener noreferrer"},B={href:"https://www.rectcircle.cn/posts/rust-actix/",target:"_blank",rel:"noopener noreferrer"},E={href:"https://axum.rs/",target:"_blank",rel:"noopener noreferrer"},R=n("h3",{id:"websocket",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#websocket","aria-hidden":"true"},"#"),s(" WebSocket💞")],-1),V={href:"https://github.com/snapview/tokio-tungstenite",target:"_blank",rel:"noopener noreferrer"},z=e(`<h2 id="关键字" tabindex="-1"><a class="header-anchor" href="#关键字" aria-hidden="true">#</a> 关键字👻</h2><h3 id="unwrap" tabindex="-1"><a class="header-anchor" href="#unwrap" aria-hidden="true">#</a> unwrap😎</h3><ul><li>官方描述</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>match 能够胜任它的工作，不过它可能有点冗长并且不总是能很好的表明其意图。Result&lt;T, E&gt; 类型定义了很多辅助方法来处理各种情况。其中之一叫做 unwrap，
它的实现就类似于示例 9-4 中的 match 语句。如果 Result 值是成员 Ok，unwrap 会返回 Ok 中的值。如果 Result 是成员 Err，unwrap 会为我们调用 panic!。
这里是一个实践 unwrap 的例子：
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>fs<span class="token punctuation">::</span></span><span class="token class-name">File</span><span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token class-name">File</span><span class="token punctuation">::</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;hello.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="结尾" tabindex="-1"><a class="header-anchor" href="#结尾" aria-hidden="true">#</a> 结尾👏</h2>`,6),C={href:"https://licheng1013.github.io/",target:"_blank",rel:"noopener noreferrer"},M=n("li",null,"文档会持续更新",-1),S=n("li",null,"请留下你的观点！",-1);function T(F,I){const a=i("ExternalLinkIcon");return o(),c("div",null,[u,r,n("ul",null,[n("li",null,[n("a",d,[s("https://rsproxy.cn/"),t(a)])])]),k,h,m,n("ul",null,[n("li",null,[s("官网 "),n("a",v,[s("https://www.rust-lang.org/zh-CN/learn"),t(a)])]),n("li",null,[s("文档 "),n("a",b,[s("中文文档"),t(a)])]),n("li",null,[s("教程 "),n("a",f,[s("https://rustwiki.org/zh-CN/rust-by-example/index.html"),t(a)])]),n("li",null,[s("学习 "),n("a",g,[s("https://github.com/licheng1013/rust-study"),t(a)])])]),_,n("ul",null,[n("li",null,[n("a",w,[s("https://tauri.app/"),t(a)])])]),x,n("ul",null,[n("li",null,[s("前端web应用: "),n("a",y,[s("https://github.com/yewstack/yew"),t(a)])])]),q,n("ul",null,[n("li",null,[s("后端应用: "),n("a",N,[s("https://github.com/actix/actix-web"),t(a)])]),n("li",null,[s("中文: "),n("a",B,[s("https://www.rectcircle.cn/posts/rust-actix/"),t(a)])]),n("li",null,[n("a",E,[s("https://axum.rs/"),t(a)])])]),R,n("ul",null,[n("li",null,[n("a",V,[s("https://github.com/snapview/tokio-tungstenite"),t(a)])])]),z,n("ul",null,[n("li",null,[n("a",C,[s("https://licheng1013.github.io/"),t(a)])]),M,S])])}const O=p(l,[["render",T],["__file","rust.html.vue"]]);export{O as default};
