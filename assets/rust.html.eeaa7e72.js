import{_ as p,o,c,b as n,e as s,a as t,d as e,r as i}from"./app.b34d8c3b.js";const l={},u=n("h1",{id:"rust",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#rust","aria-hidden":"true"},"#"),s(" Rust")],-1),r=n("h2",{id:"\u955C\u50CF\u6E90",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u955C\u50CF\u6E90","aria-hidden":"true"},"#"),s(" \u955C\u50CF\u6E90")],-1),k={href:"https://rsproxy.cn/",target:"_blank",rel:"noopener noreferrer"},d=n("h2",{id:"\u63CF\u8FF0",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u63CF\u8FF0","aria-hidden":"true"},"#"),s(" \u63CF\u8FF0")],-1),h=n("ul",null,[n("li",null,"\u65E0\u804A\u53C8\u53BB\u5B66\u4E00\u95E8\u65B0\u8BED\u8A00\u600E\u4E48\u6837\u3002"),n("li",null,"\u4E0E\u5176\u4ED6\u8BED\u8A00\u4E0D\u540C\u7684\u662F\uFF0Crust\u7684\u8BED\u6CD5\u76F8\u5F53\u7684\u964C\u751F\u3002")],-1),m=n("h2",{id:"\u4ECB\u7ECD",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u4ECB\u7ECD","aria-hidden":"true"},"#"),s(" \u4ECB\u7ECD")],-1),v={href:"https://www.rust-lang.org/zh-CN/learn",target:"_blank",rel:"noopener noreferrer"},b={href:"https://kaisery.github.io/trpl-zh-cn/ch03-01-variables-and-mutability.html",target:"_blank",rel:"noopener noreferrer"},f={href:"https://rustwiki.org/zh-CN/rust-by-example/index.html",target:"_blank",rel:"noopener noreferrer"},g={href:"https://gitee.com/licheng1013/rust-study",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/licheng1013/rust-study",target:"_blank",rel:"noopener noreferrer"},w=e(`<h2 id="\u57FA\u672C\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u8BED\u6CD5" aria-hidden="true">#</a> \u57FA\u672C\u8BED\u6CD5</h2><h3 id="\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#\u53D8\u91CF" aria-hidden="true">#</a> \u53D8\u91CF</h3><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token comment">// \u666E\u901A\u53D8\u91CF\uFF0C\u4E0D\u53EF\u53D8\u7684\uFF0C\u52A0\u4E0A mut \u4E3A\u53EF\u53D8 let mut x = 5;</span>
    <span class="token keyword">const</span> <span class="token constant">NUMBER</span><span class="token punctuation">:</span> <span class="token keyword">i16</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token comment">// \u5E38\u91CF</span>
    <span class="token keyword">let</span> y<span class="token punctuation">:</span> <span class="token keyword">f32</span> <span class="token operator">=</span> <span class="token number">3.0</span><span class="token punctuation">;</span> <span class="token comment">// f32</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{x}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{NUMBER}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{y}&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6D41\u7A0B\u63A7\u5236" tabindex="-1"><a class="header-anchor" href="#\u6D41\u7A0B\u63A7\u5236" aria-hidden="true">#</a> \u6D41\u7A0B\u63A7\u5236</h3><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> number <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> number <span class="token operator">&lt;</span> <span class="token number">5</span> <span class="token punctuation">{</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> number <span class="token operator">&lt;</span> <span class="token number">10</span>  <span class="token punctuation">{</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;10&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;false&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E09\u5143\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u4E09\u5143\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> \u4E09\u5143\u8868\u8FBE\u5F0F</h3><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code>
<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> condition <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> number <span class="token operator">=</span> <span class="token keyword">if</span> condition <span class="token punctuation">{</span> <span class="token number">5</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token number">6</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;The value of number is: {number}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5217\u8868" tabindex="-1"><a class="header-anchor" href="#\u5217\u8868" aria-hidden="true">#</a> \u5217\u8868</h3><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token comment">/// \u5217\u8868</span>
<span class="token keyword">fn</span> <span class="token function-definition function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;list-----------------------------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5217\u8868</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> v<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token class-name">Vec</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    v<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    v<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u589E\u52A0</span>
    v<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u5220\u9664</span>
    v<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\u83B7\u53D6: {:?},\u957F\u5EA6: {:?},\u5217\u8868: {:?}&quot;</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>v<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="map" tabindex="-1"><a class="header-anchor" href="#map" aria-hidden="true">#</a> Map</h3><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">map</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// map</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\\nmap-----------------------------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> map <span class="token operator">=</span> <span class="token class-name">HashMap</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    map<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">&quot;Blue&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u63D2\u5165</span>
    map<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">&quot;Yellow&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u63D2\u5165</span>
    map<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">&quot;Blue&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u66FF\u6362</span>
    map<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">&quot;Yellow&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\u83B7\u53D6: {:?},map: {:?}&quot;</span><span class="token punctuation">,</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;Blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> map<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5F00\u6E90\u5E93" tabindex="-1"><a class="header-anchor" href="#\u5F00\u6E90\u5E93" aria-hidden="true">#</a> \u5F00\u6E90\u5E93</h2><h3 id="\u8DE8\u5E73\u53F0\u684C\u9762\u6846\u67B6" tabindex="-1"><a class="header-anchor" href="#\u8DE8\u5E73\u53F0\u684C\u9762\u6846\u67B6" aria-hidden="true">#</a> \u8DE8\u5E73\u53F0\u684C\u9762\u6846\u67B6</h3>`,13),y={href:"https://tauri.app/",target:"_blank",rel:"noopener noreferrer"},x=n("h3",{id:"\u524D\u7AEF\u6846\u67B6",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u524D\u7AEF\u6846\u67B6","aria-hidden":"true"},"#"),s(" \u524D\u7AEF\u6846\u67B6")],-1),q={href:"https://github.com/yewstack/yew",target:"_blank",rel:"noopener noreferrer"},N=n("h3",{id:"\u540E\u7AEF\u6846\u67B6",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u540E\u7AEF\u6846\u67B6","aria-hidden":"true"},"#"),s(" \u540E\u7AEF\u6846\u67B6")],-1),B={href:"https://github.com/actix/actix-web",target:"_blank",rel:"noopener noreferrer"},E={href:"https://www.rectcircle.cn/posts/rust-actix/",target:"_blank",rel:"noopener noreferrer"},R={href:"https://axum.rs/",target:"_blank",rel:"noopener noreferrer"},V=n("h3",{id:"websocket",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#websocket","aria-hidden":"true"},"#"),s(" WebSocket")],-1),z={href:"https://github.com/snapview/tokio-tungstenite",target:"_blank",rel:"noopener noreferrer"},C=e(`<h2 id="\u5173\u952E\u5B57" tabindex="-1"><a class="header-anchor" href="#\u5173\u952E\u5B57" aria-hidden="true">#</a> \u5173\u952E\u5B57</h2><h3 id="unwrap" tabindex="-1"><a class="header-anchor" href="#unwrap" aria-hidden="true">#</a> unwrap</h3><ul><li>\u5B98\u65B9\u63CF\u8FF0</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>match \u80FD\u591F\u80DC\u4EFB\u5B83\u7684\u5DE5\u4F5C\uFF0C\u4E0D\u8FC7\u5B83\u53EF\u80FD\u6709\u70B9\u5197\u957F\u5E76\u4E14\u4E0D\u603B\u662F\u80FD\u5F88\u597D\u7684\u8868\u660E\u5176\u610F\u56FE\u3002Result&lt;T, E&gt; \u7C7B\u578B\u5B9A\u4E49\u4E86\u5F88\u591A\u8F85\u52A9\u65B9\u6CD5\u6765\u5904\u7406\u5404\u79CD\u60C5\u51B5\u3002\u5176\u4E2D\u4E4B\u4E00\u53EB\u505A unwrap\uFF0C
\u5B83\u7684\u5B9E\u73B0\u5C31\u7C7B\u4F3C\u4E8E\u793A\u4F8B 9-4 \u4E2D\u7684 match \u8BED\u53E5\u3002\u5982\u679C Result \u503C\u662F\u6210\u5458 Ok\uFF0Cunwrap \u4F1A\u8FD4\u56DE Ok \u4E2D\u7684\u503C\u3002\u5982\u679C Result \u662F\u6210\u5458 Err\uFF0Cunwrap \u4F1A\u4E3A\u6211\u4EEC\u8C03\u7528 panic!\u3002
\u8FD9\u91CC\u662F\u4E00\u4E2A\u5B9E\u8DF5 unwrap \u7684\u4F8B\u5B50\uFF1A
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>fs<span class="token punctuation">::</span></span><span class="token class-name">File</span><span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token class-name">File</span><span class="token punctuation">::</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;hello.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7ED3\u5C3E" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u5C3E" aria-hidden="true">#</a> \u7ED3\u5C3E</h2>`,6),M={href:"https://licheng1013.github.io/",target:"_blank",rel:"noopener noreferrer"},S=n("li",null,"\u6587\u6863\u4F1A\u6301\u7EED\u66F4\u65B0",-1),T=n("li",null,"\u8BF7\u7559\u4E0B\u4F60\u7684\u89C2\u70B9\uFF01",-1);function F(I,L){const a=i("ExternalLinkIcon");return o(),c("div",null,[u,r,n("ul",null,[n("li",null,[n("a",k,[s("https://rsproxy.cn/"),t(a)])])]),d,h,m,n("ul",null,[n("li",null,[s("\u5B98\u7F51 "),n("a",v,[s("https://www.rust-lang.org/zh-CN/learn"),t(a)])]),n("li",null,[s("\u6587\u6863 "),n("a",b,[s("\u4E2D\u6587\u6587\u6863"),t(a)])]),n("li",null,[s("\u6559\u7A0B "),n("a",f,[s("https://rustwiki.org/zh-CN/rust-by-example/index.html"),t(a)])]),n("li",null,[s("\u5B66\u4E60 "),n("a",g,[s("https://gitee.com/licheng1013/rust-study"),t(a)])]),n("li",null,[s("\u5B66\u4E60 "),n("a",_,[s("https://github.com/licheng1013/rust-study"),t(a)])])]),w,n("ul",null,[n("li",null,[n("a",y,[s("https://tauri.app/"),t(a)])])]),x,n("ul",null,[n("li",null,[s("\u524D\u7AEFweb\u5E94\u7528: "),n("a",q,[s("https://github.com/yewstack/yew"),t(a)])])]),N,n("ul",null,[n("li",null,[s("\u540E\u7AEF\u5E94\u7528: "),n("a",B,[s("https://github.com/actix/actix-web"),t(a)])]),n("li",null,[s("\u4E2D\u6587: "),n("a",E,[s("https://www.rectcircle.cn/posts/rust-actix/"),t(a)])]),n("li",null,[n("a",R,[s("https://axum.rs/"),t(a)])])]),V,n("ul",null,[n("li",null,[n("a",z,[s("https://github.com/snapview/tokio-tungstenite"),t(a)])])]),C,n("ul",null,[n("li",null,[n("a",M,[s("https://licheng1013.github.io/"),t(a)])]),S,T])])}const U=p(l,[["render",F],["__file","rust.html.vue"]]);export{U as default};
