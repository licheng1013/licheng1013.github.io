import{_ as a}from"./img-c1a6ea05.js";import{_ as e,o as i,c as l,d as t}from"./app-fce6e9c7.js";const r={},d=t('<h1 id="javaorm" tabindex="-1"><a class="header-anchor" href="#javaorm" aria-hidden="true">#</a> JavaOrm</h1><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h2><ul><li>2022/9/14</li><li>基于MybatisPlus 和 SpringBoot 制作的代码生成插件</li></ul><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><ul><li>下载: 在Idea插件市场进行下载</li></ul><h2 id="功能介绍" tabindex="-1"><a class="header-anchor" href="#功能介绍" aria-hidden="true">#</a> 功能介绍</h2><h3 id="支持对数据库注释和字段名进行mybatis-plus的注解关联" tabindex="-1"><a class="header-anchor" href="#支持对数据库注释和字段名进行mybatis-plus的注解关联" aria-hidden="true">#</a> 支持对数据库注释和字段名进行mybatis-plus的注解关联</h3><ul><li>主键自动添加 @TableId 注解</li><li>deleted 或者 数据库注释为 &quot;软删除&quot; =&gt; 则自动对应mp的软删除注解 @TableLogic</li><li>create_time 或者 created_time 或者 create_at 或者 数据库注释为: ”创建时间“ =&gt; 则自动设置mp的创建时间注解 @TableField(fill = FieldFill.INSERT)</li><li>update_time 或者 updated_time 或者 updated_at 或者 数据库注释为: ”修改时间“ =&gt; 则自动设置mp的修改时间注解 @TableField(fill = FieldFill.UPDATE)</li></ul><h3 id="效果图" tabindex="-1"><a class="header-anchor" href="#效果图" aria-hidden="true">#</a> 效果图</h3><ul><li><img src="'+a+'" alt=""></li></ul><h3 id="支持的mysql类型" tabindex="-1"><a class="header-anchor" href="#支持的mysql类型" aria-hidden="true">#</a> 支持的Mysql类型</h3><ul><li>Mysql类型 - Java类型</li><li>int - Integer</li><li>bigint - Long</li><li>datetime - Date</li><li>其他 - String</li></ul>',12),h=[d];function s(n,c){return i(),l("div",null,h)}const m=e(r,[["render",s],["__file","jorm.html.vue"]]);export{m as default};
