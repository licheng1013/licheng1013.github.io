const n=JSON.parse('{"key":"v-0afe37c4","path":"/study/go/socket.html","title":"webSocket","lang":"zh-CN","frontmatter":{"description":"webSocket 介绍 2022/10/25 代码 package service import ( \\t\\"flag\\" \\t\\"github.com/gorilla/websocket\\" \\t\\"log\\" \\t\\"net/http\\" ) var addr = flag.String(\\"addr\\", \\"localhost:8080\\", \\"http service address\\") var options = websocket.Upgrader{CheckOrigin: func(r *http.Request) bool { \\treturn true }} // use default options func socketHandler(w http.ResponseWriter, r *http.Request) { \\tc, err := options.Upgrade(w, r, nil) \\tif err != nil { \\t\\tlog.Print(\\"upgrade:\\", err) \\t\\treturn \\t} \\tdefer c.Close() \\tfor { \\t\\tmt, message, err := c.ReadMessage() \\t\\tif err != nil { \\t\\t\\tlog.Println(\\"read:\\", err) \\t\\t\\tbreak \\t\\t} \\t\\tlog.Printf(\\"recv: %s\\", message) \\t\\terr = c.WriteMessage(mt, message) \\t\\tif err != nil { \\t\\t\\tlog.Println(\\"write:\\", err) \\t\\t\\tbreak \\t\\t} \\t} } func main() { \\tflag.Parse() \\tlog.SetFlags(0) \\thttp.HandleFunc(\\"/ws\\", socketHandler) \\tlog.Fatal(http.ListenAndServe(*addr, nil)) }","head":[["meta",{"property":"og:url","content":"https://licheng1013.github.io/study/go/socket.html"}],["meta",{"property":"og:site_name","content":"LiCheng Blog"}],["meta",{"property":"og:title","content":"webSocket"}],["meta",{"property":"og:description","content":"webSocket 介绍 2022/10/25 代码 package service import ( \\t\\"flag\\" \\t\\"github.com/gorilla/websocket\\" \\t\\"log\\" \\t\\"net/http\\" ) var addr = flag.String(\\"addr\\", \\"localhost:8080\\", \\"http service address\\") var options = websocket.Upgrader{CheckOrigin: func(r *http.Request) bool { \\treturn true }} // use default options func socketHandler(w http.ResponseWriter, r *http.Request) { \\tc, err := options.Upgrade(w, r, nil) \\tif err != nil { \\t\\tlog.Print(\\"upgrade:\\", err) \\t\\treturn \\t} \\tdefer c.Close() \\tfor { \\t\\tmt, message, err := c.ReadMessage() \\t\\tif err != nil { \\t\\t\\tlog.Println(\\"read:\\", err) \\t\\t\\tbreak \\t\\t} \\t\\tlog.Printf(\\"recv: %s\\", message) \\t\\terr = c.WriteMessage(mt, message) \\t\\tif err != nil { \\t\\t\\tlog.Println(\\"write:\\", err) \\t\\t\\tbreak \\t\\t} \\t} } func main() { \\tflag.Parse() \\tlog.SetFlags(0) \\thttp.HandleFunc(\\"/ws\\", socketHandler) \\tlog.Fatal(http.ListenAndServe(*addr, nil)) }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-12-09T10:55:53.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-09T10:55:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"webSocket\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-12-09T10:55:53.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"代码","slug":"代码","link":"#代码","children":[]}],"git":{"createdTime":1670583353000,"updatedTime":1670583353000,"contributors":[{"name":"licheng1013","email":"2501093733@qq.com","commits":1}]},"readingTime":{"minutes":0.36,"words":108},"filePathRelative":"study/go/socket.md","localizedDate":"2022年12月9日","excerpt":"<h1> webSocket</h1>\\n<h2> 介绍</h2>\\n<ul>\\n<li>2022/10/25</li>\\n</ul>\\n<h2> 代码</h2>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">package</span> service\\n\\n<span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">(</span>\\n\\t<span class=\\"token string\\">\\"flag\\"</span>\\n\\t<span class=\\"token string\\">\\"github.com/gorilla/websocket\\"</span>\\n\\t<span class=\\"token string\\">\\"log\\"</span>\\n\\t<span class=\\"token string\\">\\"net/http\\"</span>\\n<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">var</span> addr <span class=\\"token operator\\">=</span> flag<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">String</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"addr\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"localhost:8080\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"http service address\\"</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">var</span> options <span class=\\"token operator\\">=</span> websocket<span class=\\"token punctuation\\">.</span>Upgrader<span class=\\"token punctuation\\">{</span>CheckOrigin<span class=\\"token punctuation\\">:</span> <span class=\\"token keyword\\">func</span><span class=\\"token punctuation\\">(</span>r <span class=\\"token operator\\">*</span>http<span class=\\"token punctuation\\">.</span>Request<span class=\\"token punctuation\\">)</span> <span class=\\"token builtin\\">bool</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">true</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">}</span> <span class=\\"token comment\\">// use default options</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">socketHandler</span><span class=\\"token punctuation\\">(</span>w http<span class=\\"token punctuation\\">.</span>ResponseWriter<span class=\\"token punctuation\\">,</span> r <span class=\\"token operator\\">*</span>http<span class=\\"token punctuation\\">.</span>Request<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\tc<span class=\\"token punctuation\\">,</span> err <span class=\\"token operator\\">:=</span> options<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Upgrade</span><span class=\\"token punctuation\\">(</span>w<span class=\\"token punctuation\\">,</span> r<span class=\\"token punctuation\\">,</span> <span class=\\"token boolean\\">nil</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token keyword\\">if</span> err <span class=\\"token operator\\">!=</span> <span class=\\"token boolean\\">nil</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\tlog<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"upgrade:\\"</span><span class=\\"token punctuation\\">,</span> err<span class=\\"token punctuation\\">)</span>\\n\\t\\t<span class=\\"token keyword\\">return</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token keyword\\">defer</span> c<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Close</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\tmt<span class=\\"token punctuation\\">,</span> message<span class=\\"token punctuation\\">,</span> err <span class=\\"token operator\\">:=</span> c<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ReadMessage</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\t\\t<span class=\\"token keyword\\">if</span> err <span class=\\"token operator\\">!=</span> <span class=\\"token boolean\\">nil</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t\\tlog<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"read:\\"</span><span class=\\"token punctuation\\">,</span> err<span class=\\"token punctuation\\">)</span>\\n\\t\\t\\t<span class=\\"token keyword\\">break</span>\\n\\t\\t<span class=\\"token punctuation\\">}</span>\\n\\n\\t\\tlog<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"recv: %s\\"</span><span class=\\"token punctuation\\">,</span> message<span class=\\"token punctuation\\">)</span>\\n\\t\\terr <span class=\\"token operator\\">=</span> c<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">WriteMessage</span><span class=\\"token punctuation\\">(</span>mt<span class=\\"token punctuation\\">,</span> message<span class=\\"token punctuation\\">)</span>\\n\\t\\t<span class=\\"token keyword\\">if</span> err <span class=\\"token operator\\">!=</span> <span class=\\"token boolean\\">nil</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t\\tlog<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"write:\\"</span><span class=\\"token punctuation\\">,</span> err<span class=\\"token punctuation\\">)</span>\\n\\t\\t\\t<span class=\\"token keyword\\">break</span>\\n\\t\\t<span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\tflag<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Parse</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\tlog<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">SetFlags</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span>\\n\\thttp<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">HandleFunc</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"/ws\\"</span><span class=\\"token punctuation\\">,</span> socketHandler<span class=\\"token punctuation\\">)</span>\\n\\tlog<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Fatal</span><span class=\\"token punctuation\\">(</span>http<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ListenAndServe</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span>addr<span class=\\"token punctuation\\">,</span> <span class=\\"token boolean\\">nil</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
