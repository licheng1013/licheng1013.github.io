import{_ as i,o,c as l,b as n,e as s,a as e,d as t,r as c}from"./app.c3fcda2c.js";const p="/images/LuBan.png",r={},u=t(`<h1 id="unity" tabindex="-1"><a class="header-anchor" href="#unity" aria-hidden="true">#</a> Unity</h1><h2 id="unity基础" tabindex="-1"><a class="header-anchor" href="#unity基础" aria-hidden="true">#</a> Unity基础</h2><h3 id="协程" tabindex="-1"><a class="header-anchor" href="#协程" aria-hidden="true">#</a> 协程</h3><div class="custom-container tip"><p class="custom-container-title">提示</p><p>协程</p></div><div class="language-c# line-numbers-mode" data-ext="c#"><pre class="language-c#"><code>IEnumerator Test(){ 
    //你的代码
    yield return null;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>延迟循环协程</p></div><div class="language-c# line-numbers-mode" data-ext="c#"><pre class="language-c#"><code>IEnumerator Text(){ 
    while (true){
        // 之前代码
        yield return new WaitForSeconds (5);
        // 之后代码
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>延迟协程</p></div><div class="language-c# line-numbers-mode" data-ext="c#"><pre class="language-c#"><code>IEnumerator Text(){ 
    yield return new WaitForSeconds (5);
    // 之后代码
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用</li></ul><div class="language-c# line-numbers-mode" data-ext="c#"><pre class="language-c#"><code>StartCoroutine(Text());
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="ads接入" tabindex="-1"><a class="header-anchor" href="#ads接入" aria-hidden="true">#</a> ads接入</h3><ul><li>https://docs.unity.com/ads/UnityAdsHome.html</li></ul><h3 id="小程序" tabindex="-1"><a class="header-anchor" href="#小程序" aria-hidden="true">#</a> 小程序</h3><ul><li>https://q.qq.com/</li><li>https://mp.weixin.qq.com/</li></ul><h3 id="json转换问题" tabindex="-1"><a class="header-anchor" href="#json转换问题" aria-hidden="true">#</a> json转换问题</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[Serializable]
public class R&lt;T&gt;{
    /** 类型由SocketEnum觉得 */
    public string type;
    /** 必须改成string才能json转换成功 */
    public T data;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>T必须是设定好类型，如果T是string那么无法接受对象类型字符串</p></div><h2 id="插件" tabindex="-1"><a class="header-anchor" href="#插件" aria-hidden="true">#</a> 插件</h2><h3 id="advertisement" tabindex="-1"><a class="header-anchor" href="#advertisement" aria-hidden="true">#</a> Advertisement</h3><ul><li>unity广告插件</li></ul><h3 id="dotween" tabindex="-1"><a class="header-anchor" href="#dotween" aria-hidden="true">#</a> DoTween</h3>`,22),d={href:"https://assetstore.unity.com/packages/tools/animation/dotween-hotween-v2-27676",target:"_blank",rel:"noopener noreferrer"},m={href:"https://blog.csdn.net/qq_40323256/article/details/86834307",target:"_blank",rel:"noopener noreferrer"},h=n("h3",{id:"easysave",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#easysave","aria-hidden":"true"},"#"),s(" EasySave")],-1),k=n("li",null,"数据保存",-1),v={href:"https://assetstore.unity.com/packages/tools/utilities/easy-save-the-complete-save-data-serialization-system-768",target:"_blank",rel:"noopener noreferrer"},b=n("h3",{id:"leantouch",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#leantouch","aria-hidden":"true"},"#"),s(" LeanTouch")],-1),g=n("li",null,"手势操作",-1),y={href:"https://assetstore.unity.com/packages/tools/input-management/lean-touch-30111",target:"_blank",rel:"noopener noreferrer"},_=n("h2",{id:"开源库",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#开源库","aria-hidden":"true"},"#"),s(" 开源库")],-1),f=n("h3",{id:"websocket",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#websocket","aria-hidden":"true"},"#"),s(" WebSocket")],-1),w={href:"https://github.com/psygames/UnityWebSocket",target:"_blank",rel:"noopener noreferrer"},x=t('<h3 id="protobuf" tabindex="-1"><a class="header-anchor" href="#protobuf" aria-hidden="true">#</a> Protobuf</h3><ul><li>下载编译好的dll</li><li><a href="/lib/protobuf-3.21.5-net45.7z">protobuf-3.21.5-net45.7z</a></li><li>复制到 Assets/Plugins</li></ul><h3 id="kcp" tabindex="-1"><a class="header-anchor" href="#kcp" aria-hidden="true">#</a> KCP</h3>',3),q={href:"https://cdn.githubjs.cf/KumoKyaku/KCP",target:"_blank",rel:"noopener noreferrer"},S=n("h3",{id:"luban",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#luban","aria-hidden":"true"},"#"),s(" LuBan")],-1),C={href:"https://focus-creative-games.github.io/luban/index/",target:"_blank",rel:"noopener noreferrer"},T=n("li",null,[n("p",null,[s("Java项目需要修改 "),n("strong",null,"root"),s(".xml")])],-1),A=n("li",null,[n("p",null,[n("img",{src:p,alt:""})])],-1),E=n("h2",{id:"微信游戏",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#微信游戏","aria-hidden":"true"},"#"),s(" 微信游戏")],-1),M={href:"https://github.com/wechat-miniprogram/minigame-unity-webgl-transform",target:"_blank",rel:"noopener noreferrer"},j=t(`<h2 id="unityapi" tabindex="-1"><a class="header-anchor" href="#unityapi" aria-hidden="true">#</a> UnityApi</h2><h3 id="移动相关" tabindex="-1"><a class="header-anchor" href="#移动相关" aria-hidden="true">#</a> 移动相关</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Collections</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Collections<span class="token punctuation">.</span>Generic</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">UnityEngine</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Player</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">MonoBehaviour</span></span> <span class="token punctuation">{</span>
    <span class="token comment">// 速度</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">float</span></span> speed <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>

    <span class="token comment">// 一个基础的脚本移动</span>
    <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">float</span></span> moveX<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">float</span></span> moveY<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">float</span></span> jump<span class="token punctuation">;</span>

    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        moveY <span class="token operator">=</span> Input<span class="token punctuation">.</span><span class="token function">GetAxisRaw</span><span class="token punctuation">(</span><span class="token string">&quot;Horizontal&quot;</span><span class="token punctuation">)</span> <span class="token operator">*</span> speed<span class="token punctuation">;</span>
        moveY <span class="token operator">=</span> Input<span class="token punctuation">.</span><span class="token function">GetAxisRaw</span><span class="token punctuation">(</span><span class="token string">&quot;Vertical&quot;</span><span class="token punctuation">)</span> <span class="token operator">*</span> speed<span class="token punctuation">;</span>
        jump <span class="token operator">=</span> Input<span class="token punctuation">.</span><span class="token function">GetAxisRaw</span><span class="token punctuation">(</span><span class="token string">&quot;Jump&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="邮件发送" tabindex="-1"><a class="header-anchor" href="#邮件发送" aria-hidden="true">#</a> 邮件发送</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SendMail</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> title<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">string</span></span> boyd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">SmtpClient</span> mailClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SmtpClient</span><span class="token punctuation">(</span><span class="token string">&quot;smtp.qq.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    mailClient<span class="token punctuation">.</span>EnableSsl <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token comment">//Credentials登陆SMTP服务器的身份验证.</span>
    mailClient<span class="token punctuation">.</span>Credentials <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">NetworkCredential</span><span class="token punctuation">(</span><span class="token string">&quot;你的邮箱&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;授权码&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//test@qq.com发件人地址、test@tom.com收件人地址</span>
    <span class="token class-name">MailMessage</span> message <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MailMessage</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">MailAddress</span><span class="token punctuation">(</span><span class="token string">&quot;发件人邮箱&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MailAddress</span><span class="token punctuation">(</span><span class="token string">&quot;收件人邮箱&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// message.Bcc.Add(new MailAddress(&quot;tst@qq.com&quot;)); //可以添加多个收件人</span>
    message<span class="token punctuation">.</span>Body <span class="token operator">=</span> boyd<span class="token punctuation">;</span><span class="token comment">//邮件内容</span>
    message<span class="token punctuation">.</span>Subject <span class="token operator">=</span> title<span class="token punctuation">;</span><span class="token comment">//邮件主题</span>
    mailClient<span class="token punctuation">.</span><span class="token function">Send</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function B(I,U){const a=c("ExternalLinkIcon");return o(),l("div",null,[u,n("ul",null,[n("li",null,[n("a",d,[s("https://assetstore.unity.com/packages/tools/animation/dotween-hotween-v2-27676"),e(a)])]),n("li",null,[n("a",m,[s("DoTween动画"),e(a)])])]),h,n("ul",null,[k,n("li",null,[n("a",v,[s("https://assetstore.unity.com/packages/tools/utilities/easy-save-the-complete-save-data-serialization-system-768"),e(a)])])]),b,n("ul",null,[g,n("li",null,[n("a",y,[s("https://assetstore.unity.com/packages/tools/input-management/lean-touch-30111"),e(a)])])]),_,f,n("ul",null,[n("li",null,[n("a",w,[s("https://github.com/psygames/UnityWebSocket"),e(a)])])]),x,n("ul",null,[n("li",null,[n("a",q,[s("https://cdn.githubjs.cf/KumoKyaku/KCP"),e(a)])])]),S,n("ul",null,[n("li",null,[n("p",null,[n("a",C,[s("https://focus-creative-games.github.io/luban/index/"),e(a)])])]),T,A]),E,n("ul",null,[n("li",null,[n("a",M,[s("https://github.com/wechat-miniprogram/minigame-unity-webgl-transform"),e(a)])])]),j])}const P=i(r,[["render",B],["__file","unity.html.vue"]]);export{P as default};
