import{_ as t,o as l,c as o,a,e as n,b as e,d as i,r as c}from"./app.2151a5d0.js";const r={},p=i(`<h1 id="linux" tabindex="-1"><a class="header-anchor" href="#linux" aria-hidden="true">#</a> Linux</h1><ul><li>2018</li></ul><h2 id="shell脚本" tabindex="-1"><a class="header-anchor" href="#shell脚本" aria-hidden="true">#</a> Shell脚本👻</h2><h2 id="ubuntu" tabindex="-1"><a class="header-anchor" href="#ubuntu" aria-hidden="true">#</a> Ubuntu🐟</h2><ul><li>允许root远程登入</li><li>vim /etc/ssh/sshd_config</li><li>Authentication 下面添加 <strong>PermitRootLogin yes</strong></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Authentication:</span>

<span class="token comment">#LoginGraceTime 2m</span>
<span class="token comment">#PermitRootLogin prohibit-password</span>
PermitRootLogin <span class="token function">yes</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Vm-Box NAT网络</li><li>可以进行手动配置跟宿主机一样的ip也能互相ping通</li></ul><h3 id="镜像源" tabindex="-1"><a class="header-anchor" href="#镜像源" aria-hidden="true">#</a> 镜像源😎</h3><ul><li><p>腾讯</p></li><li><p>wget -O /etc/apt/sources.list http://mirrors.cloud.tencent.com/repo/ubuntu18_sources.list</p></li><li><p>wget -O /etc/apt/sources.list http://mirrors.cloud.tencent.com/repo/ubuntu20_sources.list</p></li><li><p>wget -O /etc/apt/sources.list http://mirrors.cloud.tencent.com/repo/ubuntu22_sources.list</p></li><li><p>更新缓存</p></li><li><p>apt-get clean all</p></li><li><p>apt-get update</p></li></ul><h2 id="centos7" tabindex="-1"><a class="header-anchor" href="#centos7" aria-hidden="true">#</a> Centos7🐔</h2><h3 id="自动化脚本" tabindex="-1"><a class="header-anchor" href="#自动化脚本" aria-hidden="true">#</a> 自动化脚本🌈</h3>`,11),d=a("li",null,"自动配置yun源和安装命令补全工具",-1),u={href:"https://gitee.com/licheng1013/bash/blob/master/basic.sh",target:"_blank",rel:"noopener noreferrer"},h=a("h3",{id:"mysql8安装",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#mysql8安装","aria-hidden":"true"},"#"),n(" Mysql8安装🌈")],-1),m=a("ul",null,[a("li",null,"rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022"),a("li",null,"wget https://dev.mysql.com/get/mysql80-community-release-el7-6.noarch.rpm"),a("li",null,"yum install mysql-community-server")],-1),b=a("h3",{id:"ffmpeg",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#ffmpeg","aria-hidden":"true"},"#"),n(" Ffmpeg💒")],-1),k={href:"https://blog.csdn.net/junbaba_/article/details/116792099",target:"_blank",rel:"noopener noreferrer"},v=a("h2",{id:"deepin",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#deepin","aria-hidden":"true"},"#"),n(" Deepin🎁")],-1),g=a("ul",null,[a("li",null,"目前已安装到Ubuntu中使用")],-1),f=a("h2",{id:"内存搭配",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#内存搭配","aria-hidden":"true"},"#"),n(" 内存搭配🐸")],-1),_=a("li",null,"内存搭配的优先级：",-1),x=a("li",null,"大容量>小容量双通道>同容量单通道",-1),w={href:"https://www.zhihu.com/question/429446776/answer/1566188234",target:"_blank",rel:"noopener noreferrer"},z=i(`<h2 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令" aria-hidden="true">#</a> 常用命令👏</h2><h3 id="date-时间" tabindex="-1"><a class="header-anchor" href="#date-时间" aria-hidden="true">#</a> Date(时间)🌈</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#设置时区</span>
timedatectl set-timezone Asia/Shanghai
<span class="token comment">#查看当前时间</span>
<span class="token function">date</span> +%Y/%m/%d-%H:%M
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crontab-定时" tabindex="-1"><a class="header-anchor" href="#crontab-定时" aria-hidden="true">#</a> Crontab(定时)🍊</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">crontab</span> <span class="token parameter variable">-e</span> 编辑任务
<span class="token comment">#实例1：每1分钟执行一次myCommand</span>
* * * * * myCommand
<span class="token comment">#实例6：每晚的00:00重启smb</span>
<span class="token number">0</span> 00 * * * /etc/init.d/smb restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tar-压缩" tabindex="-1"><a class="header-anchor" href="#tar-压缩" aria-hidden="true">#</a> Tar(压缩)🗾</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#解压 xx.tar.gz</span>
<span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> <span class="token variable">\${file.tar.gz}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="zip-压缩" tabindex="-1"><a class="header-anchor" href="#zip-压缩" aria-hidden="true">#</a> Zip(压缩)🍒</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 压缩zip打包和子目录</span>
<span class="token function">zip</span> <span class="token parameter variable">-r</span> <span class="token parameter variable">-q</span> <span class="token parameter variable">-o</span> <span class="token variable">\${file.zip}</span> <span class="token variable">\${filePaht}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="lrzsz-上传文件" tabindex="-1"><a class="header-anchor" href="#lrzsz-上传文件" aria-hidden="true">#</a> <s>Lrzsz(上传文件)</s>🎁</h3><ul><li><s>xFtp已完全替代</s></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>sz 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="vim" tabindex="-1"><a class="header-anchor" href="#vim" aria-hidden="true">#</a> Vim🐸</h3><h4 id="字体颜色变黄" tabindex="-1"><a class="header-anchor" href="#字体颜色变黄" aria-hidden="true">#</a> 字体颜色变黄🌈</h4><ul><li>:nohl 即可回归正常</li></ul><h3 id="awk" tabindex="-1"><a class="header-anchor" href="#awk" aria-hidden="true">#</a> Awk🐯</h3><h4 id="获取docker容器id" tabindex="-1"><a class="header-anchor" href="#获取docker容器id" aria-hidden="true">#</a> 获取docker容器id💒</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> images <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;NR == 1 {next}{print $1}&#39;</span>
<span class="token function">docker</span> images <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;NR == 1 {next}{print $3}&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用awk命令导出所有镜像" tabindex="-1"><a class="header-anchor" href="#使用awk命令导出所有镜像" aria-hidden="true">#</a> 使用awk命令导出所有镜像😆</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token builtin class-name">echo</span> Hello World
<span class="token assign-left variable">list1</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token variable"><span class="token variable">\`</span><span class="token function">docker</span> images <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;NR == 1 {next}{print $1}&#39;</span><span class="token variable">\`</span></span><span class="token punctuation">)</span> <span class="token comment">#容器名</span>
<span class="token assign-left variable">list2</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token variable"><span class="token variable">\`</span><span class="token function">docker</span> images <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;NR == 1 {next}{print $3}&#39;</span><span class="token variable">\`</span></span><span class="token punctuation">)</span> <span class="token comment">#容器id</span>
<span class="token assign-left variable">list3</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token variable"><span class="token variable">\`</span><span class="token function">docker</span> images <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;NR == 1 {next}{print $2}&#39;</span><span class="token variable">\`</span></span><span class="token punctuation">)</span> <span class="token comment">#标签</span>


<span class="token comment"># 格式： 容器名:标签.tar.gz</span>
<span class="token comment">#echo $list1</span>
<span class="token comment">#echo \${list1[1]}</span>
<span class="token keyword">for</span> <span class="token variable"><span class="token punctuation">((</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>\${#list1[@]}<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">))</span></span><span class="token punctuation">;</span><span class="token keyword">do</span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;docker save <span class="token variable">\${list2<span class="token punctuation">[</span>i<span class="token punctuation">]</span>}</span> &gt; <span class="token variable">\${list1<span class="token punctuation">[</span>i<span class="token punctuation">]</span>}</span>:<span class="token variable">\${list3<span class="token punctuation">[</span>i<span class="token punctuation">]</span>}</span>.tar.gz&quot;</span>
        <span class="token variable"><span class="token variable">\`</span><span class="token function">docker</span> save $<span class="token punctuation">{</span>list2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">}</span> <span class="token operator">&gt;</span> $<span class="token punctuation">{</span>list1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">}</span>.tar.gz<span class="token variable">\`</span></span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20);function y($,q){const s=c("ExternalLinkIcon");return l(),o("div",null,[p,a("ul",null,[d,a("li",null,[a("a",u,[n("https://gitee.com/licheng1013/bash/blob/master/basic.sh"),e(s)])])]),h,m,b,a("ul",null,[a("li",null,[a("a",k,[n("https://blog.csdn.net/junbaba_/article/details/116792099"),e(s)])])]),v,g,f,a("ul",null,[_,x,a("li",null,[a("a",w,[n("https://www.zhihu.com/question/429446776/answer/1566188234"),e(s)])])]),z])}const R=t(r,[["render",y],["__file","linux.html.vue"]]);export{R as default};
