import{_ as e,o,c,d as n,e as s,a as t,b as p,r as i}from"./app.8ec5dc51.js";const l="/images/go/img.png",u={},r=p('<h1 id="go" tabindex="-1"><a class="header-anchor" href="#go" aria-hidden="true">#</a> Go</h1><h2 id="\u4ECB\u7ECD" tabindex="-1"><a class="header-anchor" href="#\u4ECB\u7ECD" aria-hidden="true">#</a> \u4ECB\u7ECD</h2><ul><li>2019\u5E74\u5F00\u59CB\u4E86\u89E3Go\u8BED\u8A00\uFF0C\u5230\u73B0\u5728\u6162\u6162\u8865\u3002</li><li>\u672C\u6587\u6863\u4ECB\u7ECD\u4E86Go\u8BED\u8A00\u57FA\u7840</li></ul><h2 id="\u5B98\u7F51" tabindex="-1"><a class="header-anchor" href="#\u5B98\u7F51" aria-hidden="true">#</a> \u5B98\u7F51</h2>',4),k=n("li",null,"\u5B98\u65B9\u7F51\u7AD9",-1),d={href:"https://golang.google.cn/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://golang.google.cn/dl/go1.19.windows-amd64.msi",target:"_blank",rel:"noopener noreferrer"},m={href:"https://goproxy.cn/",target:"_blank",rel:"noopener noreferrer"},b=p('<div class="custom-container tip"><p class="custom-container-title">\u5B89\u88C5\u63D0\u793A</p><p>\u4E0B\u8F7D\u5B8C\u540E\u6253\u5F00\u8FD0\u884C-&gt; Next -&gt; \u6309\u9ED8\u8BA4\u5B89\u88C5\u7A0B\u5E8F\u8D70\u5C31\u884C\u4E86\u3002</p></div><p><img src="'+l+`" alt=""></p><h2 id="go\u57FA\u7840\u90E8\u5206" tabindex="-1"><a class="header-anchor" href="#go\u57FA\u7840\u90E8\u5206" aria-hidden="true">#</a> go\u57FA\u7840\u90E8\u5206</h2><h3 id="\u53D8\u91CF\u8D4B\u503C" tabindex="-1"><a class="header-anchor" href="#\u53D8\u91CF\u8D4B\u503C" aria-hidden="true">#</a> \u53D8\u91CF\u8D4B\u503C</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token string">&quot;Hello&quot;</span>   <span class="token comment">//\u53EF\u4EE5\u88AB\u4FEE\u6539\uFF0C\u533F\u540D\u7C7B\u578B,\u7528\u4E8E\u5B9A\u4E49\u9ED8\u8BA4\u7684\u503C</span>
	<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token string">&quot;World&quot;</span> <span class="token comment">//\u65E0\u6CD5\u88AB\u4FEE\u6539</span>
	a <span class="token operator">=</span> <span class="token string">&quot;Ok&quot;</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span>

	<span class="token comment">//\u7533\u660E\u7C7B\u578B,\u7528\u4E8E\u63A5\u53D7\u786E\u5B9A\u7684\u7C7B\u578B\uFF0C\u5B9A\u4E49\u5168\u5C40\u53D8\u91CF\u4F7F\u7528</span>
	<span class="token keyword">var</span> sum <span class="token builtin">int</span> <span class="token comment">//\u5B9A\u4E49\u53D8\u91CF</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span>
	<span class="token keyword">var</span> list <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token comment">//\u5B9A\u4E49\u6570\u7EC4</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span>
	<span class="token keyword">var</span> hashMap <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token comment">//\u5B9A\u4E49map</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>hashMap<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6D41\u7A0B\u8BED\u53E5" tabindex="-1"><a class="header-anchor" href="#\u6D41\u7A0B\u8BED\u53E5" aria-hidden="true">#</a> \u6D41\u7A0B\u8BED\u53E5</h3><ul><li>\u8BED\u6CD5\u63A7\u5236</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;World&quot;</span><span class="token punctuation">}</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span> <span class="token comment">//\u666E\u901Afor\u5FAA\u73AF</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u6253\u5370\uFF1A%v\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">for</span> i<span class="token punctuation">,</span> item <span class="token operator">:=</span> <span class="token keyword">range</span> list <span class="token punctuation">{</span> <span class="token comment">//for\u589E\u5F3A</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E0B\u6807\uFF1A%v\uFF0C\u5C5E\u6027\uFF1A%v\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> item<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token boolean">true</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u771F&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">var</span> count <span class="token operator">=</span> <span class="token number">3</span>
	<span class="token keyword">for</span> count <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span> <span class="token comment">//\u6B7B\u5FAA\u73AF =&gt; for true {}</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6B7B\u5FAA\u73AF&quot;</span><span class="token punctuation">)</span>
		time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
		count<span class="token operator">--</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="map\u548Clist" tabindex="-1"><a class="header-anchor" href="#map\u548Clist" aria-hidden="true">#</a> Map\u548CList</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//map</span>
	hashMap <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
	hashMap<span class="token punctuation">[</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;HelloWorld&quot;</span> <span class="token comment">//\u63D2\u5165</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>hashMap<span class="token punctuation">[</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token comment">//\u83B7\u53D6</span>
	<span class="token function">delete</span><span class="token punctuation">(</span>hashMap<span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span>        <span class="token comment">//\u5220\u9664</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>hashMap<span class="token punctuation">)</span>

	<span class="token comment">//list</span>
	list <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
	list <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> <span class="token string">&quot;Hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;World&quot;</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                 <span class="token comment">//\u83B7\u53D6</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token comment">//\u622A\u53D6</span>
	list <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>list<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> list<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token operator">...</span><span class="token punctuation">)</span> <span class="token comment">//\u5220\u9664</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span>
	<span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span>
	list <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> list<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token operator">...</span><span class="token punctuation">)</span> <span class="token comment">//\u63D2\u5165\u5143\u7D20</span>
	list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;Ok&quot;</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5F02\u5E38\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u5F02\u5E38\u5904\u7406" aria-hidden="true">#</a> \u5F02\u5E38\u5904\u7406</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">Test1</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> r <span class="token operator">:=</span> <span class="token function">recover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>r<span class="token operator">!=</span><span class="token boolean">nil</span><span class="token punctuation">{</span>
			log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%v&quot;</span><span class="token punctuation">,</span>r<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

 <span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F02\u5E38\u793A\u4F8B1&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u81EA\u5B9A\u4E49\u9519\u8BEF\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u9519\u8BEF\u7C7B\u578B" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u9519\u8BEF\u7C7B\u578B</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> ServiceError <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	msg <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">IsServiceError</span><span class="token punctuation">(</span>a any<span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span>
	<span class="token keyword">switch</span> a<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token keyword">type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">case</span> <span class="token operator">*</span>ServiceError<span class="token punctuation">:</span>
		<span class="token keyword">return</span> <span class="token boolean">true</span>
	<span class="token keyword">case</span> ServiceError<span class="token punctuation">:</span>
		<span class="token keyword">return</span> <span class="token boolean">true</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">NewServiceError</span><span class="token punctuation">(</span>msg <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">*</span>ServiceError <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token operator">&amp;</span>ServiceError<span class="token punctuation">{</span>msg<span class="token punctuation">:</span> msg<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>s ServiceError<span class="token punctuation">)</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> s<span class="token punctuation">.</span>msg
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>s ServiceError<span class="token punctuation">)</span> <span class="token function">RuntimeError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">panic</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>msg<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u6D4B\u8BD5</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> r <span class="token operator">:=</span> <span class="token function">recover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> r <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">IsServiceError</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//false</span>
			log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token comment">//panic(config.NewServiceError(&quot;\u81EA\u5B9A\u4E49\u9519\u8BEF\uFF01&quot;)) //\u8FD9\u4E2A\u4F7F\u7528,\u5E76\u6CE8\u91CA\u4E0B\u9762\u4E00\u884C,\u5219\u4E3Atrue</span>
	<span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">&quot;\u81EA\u5B9A\u4E49\u9519\u8BEF\uFF01&quot;</span><span class="token punctuation">)</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u95ED\u5305" tabindex="-1"><a class="header-anchor" href="#\u95ED\u5305" aria-hidden="true">#</a> \u95ED\u5305</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">Print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">func</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span> <span class="token comment">//\u95ED\u5305\u51FD\u6570,\u8FD4\u56DE\u503C\u5FC5\u987B\u4E00\u81F4</span>
	i <span class="token operator">:=</span> <span class="token number">1</span>
	<span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token comment">//\u5185\u90E8\u4F7F\u7528\u5916\u90E8\uFF01</span>
		<span class="token keyword">return</span> a
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u63A5\u53E3\u4E0E\u7ED3\u6784\u4F53" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E3\u4E0E\u7ED3\u6784\u4F53" aria-hidden="true">#</a> \u63A5\u53E3\u4E0E\u7ED3\u6784\u4F53</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// UserService \u63A5\u53E3\u5728go\u53D8\u91CF\u60F3\u8981\u88AB\u5916\u90E8\u8BBF\u95EE\uFF0C\u5219\u9700\u8981\u9996\u5B57\u6BCD\u5927\u5199</span>
<span class="token keyword">type</span> UserService <span class="token keyword">interface</span> <span class="token punctuation">{</span>  
	<span class="token function">Add</span><span class="token punctuation">(</span>str <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token builtin">string</span>
	<span class="token function">Print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// UserServiceImpl \u7ED3\u6784\u4F53</span>
<span class="token keyword">type</span> UserServiceImpl <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	Title   <span class="token builtin">string</span>  
	Name    <span class="token builtin">string</span>
<span class="token punctuation">}</span> 
<span class="token keyword">func</span> <span class="token punctuation">(</span>UserServiceImpl<span class="token punctuation">)</span> <span class="token function">Add</span><span class="token punctuation">(</span>str <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token builtin">string</span>  <span class="token punctuation">{</span>
	<span class="token keyword">return</span> str
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>UserServiceImpl<span class="token punctuation">)</span>  <span class="token function">Print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;HelloWorld&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// var book = UserServiceImpl{&quot;a&quot;,&quot;b&quot;}  //\u521B\u5EFA\u5BF9\u8C61</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6307\u9488\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#\u6307\u9488\u6982\u5FF5" aria-hidden="true">#</a> \u6307\u9488\u6982\u5FF5</h3><ul><li>\u5E26&amp;\u53F7\u5219\u4EE3\u8868\u4F20\u9012\u6307\u9488\uFF0C\u5728\u5176\u65B9\u6CD5\u91CC\u9762\u6267\u884C\u7684\u4FEE\u6539\u53EF\u4EE5\u5F71\u54CD\u5176\u539F\u53D8\u91CF\u3002\u5426\u5219\u5219\u4E0D\u5F71\u54CD\uFF01</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u67E5\u770B\u5217\u8868 ok</span>
<span class="token keyword">func</span> <span class="token function">userList</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> where entity<span class="token punctuation">.</span>User
	
	err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Bind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>where<span class="token punctuation">)</span> 
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>where<span class="token punctuation">)</span>
	<span class="token keyword">var</span> users <span class="token punctuation">[</span><span class="token punctuation">]</span>entity<span class="token punctuation">.</span>User
	config<span class="token punctuation">.</span>Db<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>where<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>users<span class="token punctuation">)</span>

	c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> util<span class="token punctuation">.</span><span class="token function">OkData</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u591A\u7EBF\u7A0B\u901A\u9053" tabindex="-1"><a class="header-anchor" href="#\u591A\u7EBF\u7A0B\u901A\u9053" aria-hidden="true">#</a> \u591A\u7EBF\u7A0B\u901A\u9053</h3><ul><li>\u6A21\u62DF\u591A\u7EBF\u7A0B\u6267\u884C\u4EFB\u52A1\u8FDB\u884C\u7ED3\u679C\u8FD4\u56DE\uFF01</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	a <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">)</span>
	b <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">)</span>

	<span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
		a <span class="token operator">&lt;-</span> <span class="token number">1011</span>
	<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
		b <span class="token operator">&lt;-</span> <span class="token number">1111</span>
	<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token comment">// \u4F7F\u7528 &lt;-b , &lt;-a \u963B\u585E\u6765\u83B7\u53D6\u8FD4\u56DE\u6570\u636E\uFF0C\u591A\u7EBF\u7A0B\u5904\u7406\u4EFB\u52A1\u65F6\u4F7F\u7528</span>
	log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token operator">&lt;-</span>b<span class="token punctuation">)</span>
	log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token operator">&lt;-</span>a<span class="token punctuation">)</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="go\u5B9E\u8DF5" tabindex="-1"><a class="header-anchor" href="#go\u5B9E\u8DF5" aria-hidden="true">#</a> Go\u5B9E\u8DF5</h2><ul><li>\u65B9\u6CD5\u6267\u884C\u5FC5\u987B\u8FD4\u56DE\u526F\u672C\uFF0C\u800C\u4E0D\u80FD\u8FD4\u56DE\u6307\u9488\u3002\u5426\u5219list\u7C7B\u578B\u65E0\u6CD5\u904D\u5386\u3002</li></ul><h2 id="\u5F00\u6E90\u5E93" tabindex="-1"><a class="header-anchor" href="#\u5F00\u6E90\u5E93" aria-hidden="true">#</a> \u5F00\u6E90\u5E93</h2>`,29),g=n("li",null,"\u5E93\u90FD\u5F88\u7B80\u6D01\u660E\u4E86",-1),h=n("li",null,"\u7B2C\u4E09\u65B9\u5F00\u6E90\u5E93",-1),f={href:"https://gorm.io/zh_CN/",target:"_blank",rel:"noopener noreferrer"},w={href:"https://gin-gonic.com/zh-cn/",target:"_blank",rel:"noopener noreferrer"},y={href:"https://github.com/golang-jwt/jwt",target:"_blank",rel:"noopener noreferrer"},_={href:"https://cdn.githubjs.cf/go-redis/redis",target:"_blank",rel:"noopener noreferrer"},x={href:"https://cdn.githubjs.cf/go-yaml/yaml",target:"_blank",rel:"noopener noreferrer"},q={href:"https://cdn.githubjs.cf/mongodb/mongo-go-driver",target:"_blank",rel:"noopener noreferrer"},S={href:"https://gitee.com/licheng1013/go-util.git",target:"_blank",rel:"noopener noreferrer"},P={href:"https://github.com/go-gomail/gomail",target:"_blank",rel:"noopener noreferrer"},j={href:"https://github.com/gorilla/websocket",target:"_blank",rel:"noopener noreferrer"},E=n("h2",{id:"\u9AD8\u7EA7\u90E8\u5206",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9AD8\u7EA7\u90E8\u5206","aria-hidden":"true"},"#"),s(" \u9AD8\u7EA7\u90E8\u5206")],-1),I=n("ul",null,[n("li",null,"\u4EE5\u4E0B\u90FD\u662F\u57FA\u7840\u9636\u6BB5\u7528\u4E0D\u5230\u7684\u5185\u5BB9")],-1),G=n("h3",{id:"\u955C\u50CF\u914D\u7F6E",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u955C\u50CF\u914D\u7F6E","aria-hidden":"true"},"#"),s(" \u955C\u50CF\u914D\u7F6E")],-1),M=n("li",null,"\u7528\u4E8E\u4E0B\u8F7D\u7B2C\u4E09\u65B9\u5E93\u7684\u56FD\u5185\u4EE3\u7406",-1),U={href:"https://goproxy.cn/",target:"_blank",rel:"noopener noreferrer"},C=n("h3",{id:"\u5FAE\u670D\u52A1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5FAE\u670D\u52A1","aria-hidden":"true"},"#"),s(" \u5FAE\u670D\u52A1")],-1),N=n("li",null,"\u5FAE\u670D\u52A1\u5F00\u53D1\u6846\u67B6",-1),T={href:"https://go-zero.dev/cn/",target:"_blank",rel:"noopener noreferrer"},K=p(`<h3 id="\u591A\u6A21\u5757\u5F00\u53D1" tabindex="-1"><a class="header-anchor" href="#\u591A\u6A21\u5757\u5F00\u53D1" aria-hidden="true">#</a> \u591A\u6A21\u5757\u5F00\u53D1</h3><ul><li>\u5728\u6839\u76EE\u5F55\u4E0B\u521D\u59CB\u5316 go work \u4F1A\u521B\u5EFA\u4E00\u4E2A go.work \u6587\u4EF6</li><li>go work init</li><li>\u521B\u5EFA user \u76EE\u5F55\u5E76\u8FDB\u5165\uFF0C\u6267\u884C\u4EE5\u4E0B\u547D\u4EE4\u521B\u5EFA go \u6A21\u5757</li><li>go mod init user</li><li>\u5728\u6839\u76EE\u5F55\u7684work\u6587\u4EF6\u5F15\u5165</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>use <span class="token punctuation">(</span>
	core
	user
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="context\u4E0A\u4E0B\u6587" tabindex="-1"><a class="header-anchor" href="#context\u4E0A\u4E0B\u6587" aria-hidden="true">#</a> context\u4E0A\u4E0B\u6587</h3><ul><li>\u4E0A\u4E0B\u6587</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">var</span> contextData <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> Key <span class="token operator">=</span> <span class="token string">&quot;Key&quot;</span>


<span class="token comment">// SetContext \u8BBE\u7F6E\u4E0A\u4E0B\u6587\u6570\u636E,\u8FD9\u91CC\u4F20\u5165\u7684\u7C7B\u578B\u8981\u4E0E\u53D6\u51FA\u6765\u7684\u7C7B\u578B\u4E00\u81F4</span>
<span class="token keyword">func</span> <span class="token function">SetContext</span><span class="token punctuation">(</span>v <span class="token builtin">int64</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	contextData <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">WithValue</span><span class="token punctuation">(</span>contextData<span class="token punctuation">,</span> Key<span class="token punctuation">,</span> v<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// GetContext \u83B7\u53D6\u4E0A\u4E0B\u6587\u6570\u636E</span>
<span class="token keyword">func</span> <span class="token function">GetContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int64</span> <span class="token punctuation">{</span>
	value <span class="token operator">:=</span> contextData<span class="token punctuation">.</span><span class="token function">Value</span><span class="token punctuation">(</span>Key<span class="token punctuation">)</span>
	<span class="token keyword">if</span> value <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
	<span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">&quot;\u6CA1\u6709\u6570\u636E&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> value<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">int64</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E92\u65A5\u9501" tabindex="-1"><a class="header-anchor" href="#\u4E92\u65A5\u9501" aria-hidden="true">#</a> \u4E92\u65A5\u9501</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u4E92\u65A5\u9501 , \u6BCF\u4E2A\u5BF9\u8C61\u90FD\u5BF9\u5E94\u4E8E\u4E00\u4E2A\u53EF\u79F0\u4E3A&quot; \u4E92\u65A5\u9501&quot; \u7684\u6807\u8BB0\uFF0C\u8FD9\u4E2A\u6807\u8BB0\u7528\u6765\u4FDD\u8BC1\u5728\u4EFB\u4E00\u65F6\u523B\uFF0C\u53EA\u80FD\u6709\u4E00\u4E2A\u7EBF\u7A0B\u8BBF\u95EE\u8BE5\u5BF9\u8C61\u3002</span>
<span class="token keyword">var</span> lock sync<span class="token punctuation">.</span>Mutex

<span class="token comment">//var lock sync.RWMutex</span>

<span class="token keyword">var</span> v <span class="token operator">=</span> <span class="token number">0</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		<span class="token keyword">go</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token comment">//fmt.Println(&lt;-str)</span>
	time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10000</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		lock<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		v<span class="token operator">++</span>
		lock<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5355\u5143\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#\u5355\u5143\u6D4B\u8BD5" aria-hidden="true">#</a> \u5355\u5143\u6D4B\u8BD5</h3><ul><li>sort_test.go</li><li>\u4EE5_test\u7ED3\u5C3E\u7684go\u6587\u4EF6\u5C31\u662F\u6D4B\u8BD5</li><li>\u6D4B\u8BD5\u5206\u4E3A\u4E09\u4E2A\u6B65\u9AA4</li><li>1: \u8F93\u5165\u6D4B\u8BD5\u6570\u636E</li><li>2: \u6267\u884C\u6D4B\u8BD5\u7684\u529F\u80FD</li><li>3: \u9A8C\u8BC1\u6D4B\u8BD5\u7684\u529F\u80FD</li></ul><h2 id="\u5DE5\u5177\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u5DE5\u5177\u7C7B" aria-hidden="true">#</a> \u5DE5\u5177\u7C7B</h2><h3 id="jwt" tabindex="-1"><a class="header-anchor" href="#jwt" aria-hidden="true">#</a> Jwt</h3><ul><li>go get -u github.com/golang-jwt/jwt/v4</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> util
<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;github.com/golang-jwt/jwt/v4&quot;</span>
	<span class="token string">&quot;time&quot;</span>
<span class="token punctuation">)</span>
<span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token string">&quot;izVguZPRsBQ5Rqw6dhMvcIwy8_9lQnrO3vpxGwPxfAxDs&quot;</span>
<span class="token keyword">const</span> UserIdKey <span class="token operator">=</span> <span class="token string">&quot;userId&quot;</span>
<span class="token keyword">const</span> expireTimeKey <span class="token operator">=</span> <span class="token string">&quot;expireTime&quot;</span>
<span class="token keyword">func</span> <span class="token function">GetToken</span><span class="token punctuation">(</span>id <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
	mySigningKey <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
	claims <span class="token operator">:=</span> <span class="token operator">&amp;</span>jwt<span class="token punctuation">.</span>MapClaims<span class="token punctuation">{</span>
		UserIdKey<span class="token punctuation">:</span>     id<span class="token punctuation">,</span>
		expireTimeKey<span class="token punctuation">:</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
	token <span class="token operator">:=</span> jwt<span class="token punctuation">.</span><span class="token function">NewWithClaims</span><span class="token punctuation">(</span>jwt<span class="token punctuation">.</span>SigningMethodHS256<span class="token punctuation">,</span> claims<span class="token punctuation">)</span>
	t<span class="token punctuation">,</span> err <span class="token operator">:=</span> token<span class="token punctuation">.</span><span class="token function">SignedString</span><span class="token punctuation">(</span>mySigningKey<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> t
<span class="token punctuation">}</span>
<span class="token comment">// GetUserId  \u83B7\u53D6token\u89E3\u6790\uFF0C\u8BF7\u4F7F\u7528 GetTokenParse \u66FF\u4EE3</span>
<span class="token comment">// Deprecated</span>
<span class="token keyword">func</span> <span class="token function">GetUserId</span><span class="token punctuation">(</span>t <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token function">GetTokenParse</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// GetTokenParse \u83B7\u53D6token\u89E3\u6790</span>
<span class="token keyword">func</span> <span class="token function">GetTokenParse</span><span class="token punctuation">(</span>t <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
	token<span class="token punctuation">,</span> err <span class="token operator">:=</span> jwt<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>token <span class="token operator">*</span>jwt<span class="token punctuation">.</span>Token<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token comment">//log.Println(token.Header)</span>
	<span class="token comment">//log.Println(token.Claims)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	id <span class="token operator">:=</span> <span class="token punctuation">(</span>token<span class="token punctuation">.</span>Claims<span class="token punctuation">.</span><span class="token punctuation">(</span>jwt<span class="token punctuation">.</span>MapClaims<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">]</span>
	<span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%v&quot;</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14);function W(D,z){const a=i("ExternalLinkIcon");return o(),c("div",null,[r,n("ul",null,[k,n("li",null,[n("a",d,[s("https://golang.google.cn/"),t(a)])]),n("li",null,[n("a",v,[s("win\u4E0B\u8F7D\u94FE\u63A5go1.19"),t(a)])]),n("li",null,[n("a",m,[s("\u955C\u50CF\u6E90"),t(a)])])]),b,n("ul",null,[g,h,n("li",null,[n("a",f,[s("https://gorm.io/zh_CN/"),t(a)])]),n("li",null,[n("a",w,[s("https://gin-gonic.com/zh-cn/"),t(a)])]),n("li",null,[n("a",y,[s("https://github.com/golang-jwt/jwt"),t(a)])]),n("li",null,[n("a",_,[s("https://cdn.githubjs.cf/go-redis/redis"),t(a)])]),n("li",null,[n("a",x,[s("https://cdn.githubjs.cf/go-yaml/yaml"),t(a)])]),n("li",null,[n("a",q,[s("https://cdn.githubjs.cf/mongodb/mongo-go-driver"),t(a)])]),n("li",null,[n("a",S,[s("https://gitee.com/licheng1013/go-util.git"),t(a)])]),n("li",null,[n("a",P,[s("https://github.com/go-gomail/gomail"),t(a)])]),n("li",null,[n("a",j,[s("https://github.com/gorilla/websocket"),t(a)])])]),E,I,G,n("ul",null,[M,n("li",null,[n("a",U,[s("https://goproxy.cn/"),t(a)])])]),C,n("ul",null,[N,n("li",null,[n("a",T,[s("https://go-zero.dev/cn/"),t(a)])])]),K])}const V=e(u,[["render",W],["__file","go.html.vue"]]);export{V as default};
