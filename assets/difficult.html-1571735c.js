const n=JSON.parse('{"key":"v-50eda543","path":"/study/go/difficult.html","title":"高级","lang":"zh-CN","frontmatter":{"description":"高级 介绍 23/2/28 理解go某些高级操作。 Select package main import ( \\"fmt\\" \\"time\\" ) func main() { // 创建两个channel ch1 := make(chan string) ch2 := make(chan string) // 启动两个Goroutine分别向channel发送数据 go func() { time.Sleep(3 * time.Second) // 模拟耗时操作 ch1 &lt;- \\"one\\" // 向ch1发送数据 }() go func() { time.Sleep(1 * time.Second) // 模拟耗时操作 ch2 &lt;- \\"two\\" // 向ch2发送数据 }() // 使用select语句接收channel数据 for i := 0; i &lt; 2; i++ { select { case msg1 := &lt;- ch1: // 如果ch1有数据，执行这个case fmt.Println(\\"received\\", msg1) case msg2 := &lt;- ch2: // 如果ch2有数据，执行这个case fmt.Println(\\"received\\", msg2) } } // 因为ch2比ch1先准备好 select语句会先执行第二个case，然后等待ch1准备好再执行第一个case。 // 输出结果 // received two // received one }","head":[["meta",{"property":"og:url","content":"https://licheng1013.github.io/study/go/difficult.html"}],["meta",{"property":"og:site_name","content":"LiCheng Blog"}],["meta",{"property":"og:title","content":"高级"}],["meta",{"property":"og:description","content":"高级 介绍 23/2/28 理解go某些高级操作。 Select package main import ( \\"fmt\\" \\"time\\" ) func main() { // 创建两个channel ch1 := make(chan string) ch2 := make(chan string) // 启动两个Goroutine分别向channel发送数据 go func() { time.Sleep(3 * time.Second) // 模拟耗时操作 ch1 &lt;- \\"one\\" // 向ch1发送数据 }() go func() { time.Sleep(1 * time.Second) // 模拟耗时操作 ch2 &lt;- \\"two\\" // 向ch2发送数据 }() // 使用select语句接收channel数据 for i := 0; i &lt; 2; i++ { select { case msg1 := &lt;- ch1: // 如果ch1有数据，执行这个case fmt.Println(\\"received\\", msg1) case msg2 := &lt;- ch2: // 如果ch2有数据，执行这个case fmt.Println(\\"received\\", msg2) } } // 因为ch2比ch1先准备好 select语句会先执行第二个case，然后等待ch1准备好再执行第一个case。 // 输出结果 // received two // received one }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-28T08:04:15.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-28T08:04:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"高级\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-28T08:04:15.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"Select","slug":"select","link":"#select","children":[]}],"git":{"createdTime":1677571455000,"updatedTime":1677571455000,"contributors":[{"name":"licheng1013","email":"2501093733@qq.com","commits":1}]},"readingTime":{"minutes":0.62,"words":185},"filePathRelative":"study/go/difficult.md","localizedDate":"2023年2月28日","excerpt":"<h1> 高级</h1>\\n<h2> 介绍</h2>\\n<ul>\\n<li>23/2/28</li>\\n<li>理解go某些高级操作。</li>\\n</ul>\\n<h2> Select</h2>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">package</span> main\\n\\n<span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">(</span>\\n  <span class=\\"token string\\">\\"fmt\\"</span>\\n  <span class=\\"token string\\">\\"time\\"</span>\\n<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token comment\\">// 创建两个channel</span>\\n  ch1 <span class=\\"token operator\\">:=</span> <span class=\\"token function\\">make</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">chan</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">)</span>\\n  ch2 <span class=\\"token operator\\">:=</span> <span class=\\"token function\\">make</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">chan</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">)</span>\\n\\n  <span class=\\"token comment\\">// 启动两个Goroutine分别向channel发送数据</span>\\n  <span class=\\"token keyword\\">go</span> <span class=\\"token keyword\\">func</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    time<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Sleep</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">3</span> <span class=\\"token operator\\">*</span> time<span class=\\"token punctuation\\">.</span>Second<span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// 模拟耗时操作</span>\\n    ch1 <span class=\\"token operator\\">&lt;-</span> <span class=\\"token string\\">\\"one\\"</span> <span class=\\"token comment\\">// 向ch1发送数据</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n  <span class=\\"token keyword\\">go</span> <span class=\\"token keyword\\">func</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    time<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Sleep</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span> <span class=\\"token operator\\">*</span> time<span class=\\"token punctuation\\">.</span>Second<span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// 模拟耗时操作</span>\\n    ch2 <span class=\\"token operator\\">&lt;-</span> <span class=\\"token string\\">\\"two\\"</span> <span class=\\"token comment\\">// 向ch2发送数据</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n  <span class=\\"token comment\\">// 使用select语句接收channel数据</span>\\n  <span class=\\"token keyword\\">for</span> i <span class=\\"token operator\\">:=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">select</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">case</span> msg1 <span class=\\"token operator\\">:=</span> <span class=\\"token operator\\">&lt;-</span> ch1<span class=\\"token punctuation\\">:</span> <span class=\\"token comment\\">// 如果ch1有数据，执行这个case</span>\\n        fmt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"received\\"</span><span class=\\"token punctuation\\">,</span> msg1<span class=\\"token punctuation\\">)</span>\\n      <span class=\\"token keyword\\">case</span> msg2 <span class=\\"token operator\\">:=</span> <span class=\\"token operator\\">&lt;-</span> ch2<span class=\\"token punctuation\\">:</span> <span class=\\"token comment\\">// 如果ch2有数据，执行这个case</span>\\n        fmt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"received\\"</span><span class=\\"token punctuation\\">,</span> msg2<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token comment\\">// 因为ch2比ch1先准备好 select语句会先执行第二个case，然后等待ch1准备好再执行第一个case。</span>\\n  <span class=\\"token comment\\">// 输出结果</span>\\n  <span class=\\"token comment\\">// received two</span>\\n  <span class=\\"token comment\\">// received one</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
